package silver.translation.java.driver;

public class Init{

	private static boolean preInit = false;
	private static boolean init = false;
	private static boolean postInit = false;

	public static void initAllStatics(){
		if(preInit) return;
		preInit = true;

		core.monad.Init.initAllStatics();
		silver.definition.flow.env.Init.initAllStatics();
		silver.analysis.typechecking.core.Init.initAllStatics();
		silver.driver.util.Init.initAllStatics();
		core.Init.initAllStatics();
		silver.util.cmdargs.Init.initAllStatics();
		silver.util.Init.initAllStatics();
		silver.definition.core.Init.initAllStatics();
		silver.definition.env.Init.initAllStatics();
		silver.driver.Init.initAllStatics();
		silver.translation.java.core.Init.initAllStatics();
		silver.translation.java.driver.Init.initAllStatics();

	}

	public static void init(){
		if(init) return;
		init = true;

		setupInheritedAttributes();

		core.monad.Init.init();
		silver.definition.flow.env.Init.init();
		silver.analysis.typechecking.core.Init.init();
		silver.driver.util.Init.init();
		core.Init.init();
		silver.util.cmdargs.Init.init();
		silver.util.Init.init();
		silver.definition.core.Init.init();
		silver.definition.env.Init.init();
		silver.driver.Init.init();
		silver.translation.java.core.Init.init();
		silver.translation.java.driver.Init.init();

		initProductionAttributeDefinitions();
	}

	public static void postInit(){
		if(postInit) return;
		postInit = true;

		core.monad.Init.postInit();
		silver.definition.flow.env.Init.postInit();
		silver.analysis.typechecking.core.Init.postInit();
		silver.driver.util.Init.postInit();
		core.Init.postInit();
		silver.util.cmdargs.Init.postInit();
		silver.util.Init.postInit();
		silver.definition.core.Init.postInit();
		silver.definition.env.Init.postInit();
		silver.driver.Init.postInit();
		silver.translation.java.core.Init.postInit();
		silver.translation.java.driver.Init.postInit();


		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PxjFlag.class);
		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PonejarFlag.class);
		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PrelativejarFlag.class);
		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PincludeRTJarFlag.class);
		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PbuildXmlFlag.class);
		common.Decorator.applyDecorators(silver.driver.util.NDriverAction.decorators, PgenJava.class);
		common.Decorator.applyDecorators(silver.driver.util.NDriverAction.decorators, PgenBuild.class);
	}

	private static void setupInheritedAttributes(){
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.translation.java.driver.Init.silver_translation_java_driver_noJavaGeneration__ON__silver_util_cmdargs_CmdArgs] = "silver:translation:java:driver:noJavaGeneration";
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.translation.java.driver.Init.silver_translation_java_driver_buildSingleJar__ON__silver_util_cmdargs_CmdArgs] = "silver:translation:java:driver:buildSingleJar";
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.translation.java.driver.Init.silver_translation_java_driver_relativeJar__ON__silver_util_cmdargs_CmdArgs] = "silver:translation:java:driver:relativeJar";
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.translation.java.driver.Init.silver_translation_java_driver_includeRTJars__ON__silver_util_cmdargs_CmdArgs] = "silver:translation:java:driver:includeRTJars";
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.translation.java.driver.Init.silver_translation_java_driver_buildXmlLocation__ON__silver_util_cmdargs_CmdArgs] = "silver:translation:java:driver:buildXmlLocation";
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.buildXmlLocation__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:buildXmlLocation";
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.extraTopLevelDecls__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:extraTopLevelDecls";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraTopLevelDecls__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.extraDistDeps__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:extraDistDeps";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraDistDeps__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.extraJarsDeps__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:extraJarsDeps";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraJarsDeps__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.extraGrammarsDeps__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:extraGrammarsDeps";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraGrammarsDeps__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.classpathCompiler__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:classpathCompiler";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.classpathCompiler__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:classpathRuntime";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.extraManifestAttributes__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:extraManifestAttributes";
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraManifestAttributes__ON__silver_driver_util_compilation] = new common.CollectionAttribute(){
			public Object eval(common.DecoratedNode context) {
				common.ConsCell result = (common.ConsCell)this.getBase().eval(context);
				for(int i = 0; i < this.getPieces().size(); i++){
					result = common.AppendCell.append(result, (common.ConsCell)this.getPieces().get(i).eval(context));
				}
				return result;
			}
		};
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.outputFile__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:outputFile";
		silver.driver.util.Pcompilation.occurs_local[silver.translation.java.driver.Init.buildXml__ON__silver_driver_util_compilation] = "silver:driver:util:compilation:local:buildXml";
		silver.translation.java.driver.PgenJava.occurs_local[silver.translation.java.driver.Init.pr__ON__silver_translation_java_driver_genJava] = "silver:translation:java:driver:genJava:local:pr";
		silver.translation.java.driver.PwriteAll.occurs_local[silver.translation.java.driver.Init.now__ON__silver_translation_java_driver_writeAll] = "silver:translation:java:driver:writeAll:local:now";
		silver.translation.java.driver.PwriteAll.occurs_local[silver.translation.java.driver.Init.recurse__ON__silver_translation_java_driver_writeAll] = "silver:translation:java:driver:writeAll:local:recurse";
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:srcPath";
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.binPath__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:binPath";
		//	local attribute mkiotest::IOVal<Boolean>;
		silver.translation.java.driver.PwriteSpec.localInheritedAttributes[silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec] = new common.Lazy[core.NIOVal.num_inh_attrs];
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:mkiotest";
		//	local attribute mksrc::IOVal<Boolean>;
		silver.translation.java.driver.PwriteSpec.localInheritedAttributes[silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec] = new common.Lazy[core.NIOVal.num_inh_attrs];
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:mksrc";
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.clean__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:clean";
		silver.translation.java.driver.PwriteSpec.occurs_local[silver.translation.java.driver.Init.printio__ON__silver_translation_java_driver_writeSpec] = "silver:translation:java:driver:writeSpec:local:printio";
	}

	private static void initProductionAttributeDefinitions(){
		//ASPECT PRODUCTION endCmdArgs top ::= _ 
		// top.noJavaGeneration = false
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.translation.java.driver.Init.silver_translation_java_driver_noJavaGeneration__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return false; } };
		// top.buildSingleJar = false
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.translation.java.driver.Init.silver_translation_java_driver_buildSingleJar__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return false; } };
		// top.relativeJar = false
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.translation.java.driver.Init.silver_translation_java_driver_relativeJar__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return false; } };
		// top.includeRTJars = []
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.translation.java.driver.Init.silver_translation_java_driver_includeRTJars__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } };
		// top.buildXmlLocation = []
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.translation.java.driver.Init.silver_translation_java_driver_buildXmlLocation__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } };
		silver.translation.java.driver.PxjFlag.initProductionAttributeDefinitions();
		silver.translation.java.driver.PonejarFlag.initProductionAttributeDefinitions();
		silver.translation.java.driver.PrelativejarFlag.initProductionAttributeDefinitions();
		silver.translation.java.driver.PincludeRTJarFlag.initProductionAttributeDefinitions();
		silver.translation.java.driver.PbuildXmlFlag.initProductionAttributeDefinitions();
		//ASPECT FUNCTION parseArgs Either<String Decorated CmdArgs> ::= args::[String] 
		// flags <- [ pair("--dont-translate", flag(xjFlag)), pair("--onejar", flag(onejarFlag)), pair("--one-jar", flag(onejarFlag)), pair("--relative-jar", flag(relativejarFlag)), pair("--include-jar", option(includeRTJarFlag)), pair("--build-xml-location", option(buildXmlFlag)) ]
		((common.CollectionAttribute)silver.driver.PparseArgs.localAttributes[silver.driver.Init.flags__ON__silver_driver_parseArgs]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--dont-translate")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.translation.java.driver.PxjFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--onejar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.translation.java.driver.PonejarFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--one-jar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.translation.java.driver.PonejarFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--relative-jar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.translation.java.driver.PrelativejarFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--include-jar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Poption(silver.translation.java.driver.PincludeRTJarFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--build-xml-location")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Poption(silver.translation.java.driver.PbuildXmlFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } })); } })); } })); } })); } })); } });
		// flagdescs <- [ "\t--one-jar  : include runtime libraries in the jar" ]
		((common.CollectionAttribute)silver.driver.PparseArgs.localAttributes[silver.driver.Init.flagdescs__ON__silver_driver_parseArgs]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("\t--one-jar  : include runtime libraries in the jar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } });
		//ASPECT PRODUCTION compilation top ::= g::Grammars _ buildGrammar::String benv::BuildEnv 
		// buildXmlLocation = if null(top.config.buildXmlLocation) then "build.xml" else head(top.config.buildXmlLocation)
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.buildXmlLocation__ON__silver_driver_util_compilation] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)core.Pnull.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_buildXmlLocation__ON__silver_util_cmdargs_CmdArgs)); } })) ? (new common.StringCatter("build.xml")) : ((common.StringCatter)core.Phead.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_buildXmlLocation__ON__silver_util_cmdargs_CmdArgs)); } }))); } };
		// top.postOps <- if top.config.noJavaGeneration then [] else [ genJava(top.config, grammarsToTranslate, benv.silverGen), genBuild(buildXmlLocation, buildXml) ]
		if(silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation] == null)
			silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation] = new silver.driver.util.CApostOps(silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation);
		((common.CollectionAttribute)silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_noJavaGeneration__ON__silver_util_cmdargs_CmdArgs)) ? ((common.ConsCell)core.Pnil.invoke()) : ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.driver.util.NDriverAction)new silver.translation.java.driver.PgenJava(context.contextInheritedLazy(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation), context.localAsIsLazy(silver.driver.util.Init.grammarsToTranslate__ON__silver_driver_util_compilation), context.childDecoratedSynthesizedLazy(silver.driver.util.Pcompilation.i_benv, silver.driver.util.Init.silver_driver_util_silverGen__ON__silver_driver_util_BuildEnv))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.driver.util.NDriverAction)new silver.translation.java.driver.PgenBuild(context.localAsIsLazy(silver.translation.java.driver.Init.buildXmlLocation__ON__silver_driver_util_compilation), context.localAsIsLazy(silver.translation.java.driver.Init.buildXml__ON__silver_driver_util_compilation))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } }))); } });
		// extraTopLevelDecls := []
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraTopLevelDecls__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } });
		// extraDistDeps := [ "jars" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraDistDeps__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("jars")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } });
		// extraJarsDeps := [ "grammars" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraJarsDeps__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("grammars")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } });
		// extraGrammarsDeps := [ "init" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraGrammarsDeps__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("init")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } });
		// classpathCompiler := []
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.classpathCompiler__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } });
		// classpathRuntime := [ "${sh}/jars/SilverRuntime.jar" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("${sh}/jars/SilverRuntime.jar")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } });
		// classpathRuntime <- top.config.includeRTJars
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_includeRTJars__ON__silver_util_cmdargs_CmdArgs)); } });
		// extraManifestAttributes := [ "<attribute name='Built-By' value='${user.name}' />", "<attribute name='Implementation-Version' value='${TIME}' />", "<attribute name='Main-Class' value='" ++ makeName(buildGrammar) ++ ".Main' />" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraManifestAttributes__ON__silver_driver_util_compilation]).setBase(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("<attribute name='Built-By' value='${user.name}' />")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("<attribute name='Implementation-Version' value='${TIME}' />")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)(new common.StringCatter("<attribute name='Main-Class' value='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)silver.translation.java.core.PmakeName.invoke(context.childAsIsLazy(silver.driver.util.Pcompilation.i_buildGrammar))), (common.StringCatter)(new common.StringCatter(".Main' />")))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } })); } })); } });
		// extraManifestAttributes <- if top.config.buildSingleJar then [] else [ "<attribute name='Class-Path' value='${man.classpath}' />" ]
		((common.CollectionAttribute)silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.extraManifestAttributes__ON__silver_driver_util_compilation]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_buildSingleJar__ON__silver_util_cmdargs_CmdArgs)) ? ((common.ConsCell)core.Pnil.invoke()) : ((common.ConsCell)core.Pcons.invoke((new common.StringCatter("<attribute name='Class-Path' value='${man.classpath}' />")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } }))); } });
		// outputFile = if ! null(top.config.outName) then head(top.config.outName) else makeName(buildGrammar) ++ ".jar"
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.outputFile__ON__silver_driver_util_compilation] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((!((Boolean)core.Pnull.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.driver.Init.silver_driver_outName__ON__silver_util_cmdargs_CmdArgs)); } }))) ? ((common.StringCatter)core.Phead.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.driver.Init.silver_driver_outName__ON__silver_util_cmdargs_CmdArgs)); } })) : new common.StringCatter((common.StringCatter)((common.StringCatter)silver.translation.java.core.PmakeName.invoke(context.childAsIsLazy(silver.driver.util.Pcompilation.i_buildGrammar))), (common.StringCatter)(new common.StringCatter(".jar")))); } };
		// buildXml = "<project name='" ++ buildGrammar ++ "' default='dist' basedir='.'>\n" ++ "  <description>Generated build script for the grammar " ++ buildGrammar ++ "</description>\n\n" ++ "  <property environment='env'/>\n" ++ "  <property name='jg' location='" ++ benv.silverGen ++ "'/>\n" ++ "  <property name='sh' location='" ++ benv.silverHome ++ "'/>\n" ++ "  <property name='bin' location='${jg}/bin'/>\n" ++ "  <property name='src' location='${jg}/src'/>\n\n" ++ "  <path id='lib.classpath'>\n" ++ implode("", map(pathLocation, classpathRuntime)) ++ "  </path>\n\n" ++ "  <path id='compile.classpath'>\n" ++ "    <pathelement location='${src}' />\n" ++ "    <path refid='lib.classpath'/>\n" ++ implode("", map(pathLocation, classpathCompiler)) ++ "  </path>\n\n" ++ implode("\n\n", extraTopLevelDecls) ++ "\n\n" ++ "  <target name='init'>\n" ++ "    <tstamp>\n" ++ "      <format property='TIME' pattern='yyyy.MM.dd.HH.mm.ss'/>\n" ++ "    </tstamp>\n" ++ "    <mkdir dir='${bin}'/>\n" ++ "  </target>\n\n" ++ "  <target name='dist' depends='" ++ implode(", ", extraDistDeps) ++ "'>\n" ++ "  </target>\n\n" ++ "  <target name='jars' depends='" ++ implode(", ", extraJarsDeps) ++ "'>\n" ++ "    <pathconvert refid='lib.classpath' pathsep=' ' property='man.classpath'>\n" ++ (if top.config.relativeJar then "      <flattenmapper />\n" else "      <filtermapper><replacestring from=' ' to='%20' /></filtermapper>\n") ++ "    </pathconvert>\n" ++ "    <jar destfile='" ++ outputFile ++ "' basedir='${bin}'>\n" ++ implode("", map(includeName(_, "*.class"), grammarsDependedUpon)) ++ "      <manifest>\n" ++ "        " ++ implode("\n        ", extraManifestAttributes) ++ "\n" ++ "      </manifest>\n" ++ (if top.config.buildSingleJar then implode("", map(zipfileset, classpathRuntime)) else "") ++ "    </jar>\n" ++ "  </target>\n\n" ++ "  <target name='grammars' depends='" ++ implode(", ", extraGrammarsDeps) ++ "'>\n" ++ "    <javac debug='on' classpathref='compile.classpath' srcdir='${src}' destdir='${bin}' includeantruntime='false'>\n" ++ implode("", map(includeName(_, "*.java"), grammarsDependedUpon)) ++ "    </javac>\n" ++ "  </target>\n" ++ "</project>\n"
		silver.driver.util.Pcompilation.localAttributes[silver.translation.java.driver.Init.buildXml__ON__silver_driver_util_compilation] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)(new common.StringCatter("<project name='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.driver.util.Pcompilation.i_buildGrammar)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("' default='dist' basedir='.'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <description>Generated build script for the grammar ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.driver.util.Pcompilation.i_buildGrammar)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("</description>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <property environment='env'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <property name='jg' location='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(silver.driver.util.Pcompilation.i_benv).synthesized(silver.driver.util.Init.silver_driver_util_silverGen__ON__silver_driver_util_BuildEnv)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <property name='sh' location='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.childDecorated(silver.driver.util.Pcompilation.i_benv).synthesized(silver.driver.util.Init.silver_driver_util_silverHome__ON__silver_driver_util_BuildEnv)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <property name='bin' location='${jg}/bin'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <property name='src' location='${jg}/src'/>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <path id='lib.classpath'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.translation.java.driver.PpathLocation.factory, context.localAsIsLazy(silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation))); } })), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </path>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <path id='compile.classpath'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <pathelement location='${src}' />\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <path refid='lib.classpath'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.translation.java.driver.PpathLocation.factory, context.localAsIsLazy(silver.translation.java.driver.Init.classpathCompiler__ON__silver_driver_util_compilation))); } })), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </path>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("\n\n")), context.localAsIsLazy(silver.translation.java.driver.Init.extraTopLevelDecls__ON__silver_driver_util_compilation))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <target name='init'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <tstamp>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("      <format property='TIME' pattern='yyyy.MM.dd.HH.mm.ss'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    </tstamp>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <mkdir dir='${bin}'/>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </target>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <target name='dist' depends='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter(", ")), context.localAsIsLazy(silver.translation.java.driver.Init.extraDistDeps__ON__silver_driver_util_compilation))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </target>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <target name='jars' depends='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter(", ")), context.localAsIsLazy(silver.translation.java.driver.Init.extraJarsDeps__ON__silver_driver_util_compilation))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <pathconvert refid='lib.classpath' pathsep=' ' property='man.classpath'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(((Boolean)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_relativeJar__ON__silver_util_cmdargs_CmdArgs)) ? (new common.StringCatter("      <flattenmapper />\n")) : (new common.StringCatter("      <filtermapper><replacestring from=' ' to='%20' /></filtermapper>\n"))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    </pathconvert>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <jar destfile='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.localAsIs(silver.translation.java.driver.Init.outputFile__ON__silver_driver_util_compilation)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("' basedir='${bin}'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.translation.java.driver.PincludeName.factory.invokePartial(new int[]{1}, new Object[]{(new common.StringCatter("*.class"))}); } }, context.localAsIsLazy(silver.driver.util.Init.grammarsDependedUpon__ON__silver_driver_util_compilation))); } })), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("      <manifest>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("        ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("\n        ")), context.localAsIsLazy(silver.translation.java.driver.Init.extraManifestAttributes__ON__silver_driver_util_compilation))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("      </manifest>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(((Boolean)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.translation.java.driver.Init.silver_translation_java_driver_buildSingleJar__ON__silver_util_cmdargs_CmdArgs)) ? ((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.translation.java.driver.Pzipfileset.factory, context.localAsIsLazy(silver.translation.java.driver.Init.classpathRuntime__ON__silver_driver_util_compilation))); } })) : (new common.StringCatter(""))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    </jar>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </target>\n\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  <target name='grammars' depends='")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter(", ")), context.localAsIsLazy(silver.translation.java.driver.Init.extraGrammarsDeps__ON__silver_driver_util_compilation))), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    <javac debug='on' classpathref='compile.classpath' srcdir='${src}' destdir='${bin}' includeantruntime='false'>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)core.Pimplode.invoke((new common.StringCatter("")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.translation.java.driver.PincludeName.factory.invokePartial(new int[]{1}, new Object[]{(new common.StringCatter("*.java"))}); } }, context.localAsIsLazy(silver.driver.util.Init.grammarsDependedUpon__ON__silver_driver_util_compilation))); } })), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("    </javac>\n")), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("  </target>\n")), (common.StringCatter)(new common.StringCatter("</project>\n")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))); } };
		silver.translation.java.driver.PgenJava.initProductionAttributeDefinitions();
		silver.translation.java.driver.PgenBuild.initProductionAttributeDefinitions();
		//FUNCTION writeAll IO ::= i::IO a::Decorated CmdArgs l::[Decorated RootSpec] silverGen::String 
		// now = writeSpec(i, head(l), silverGen)
		silver.translation.java.driver.PwriteAll.localAttributes[silver.translation.java.driver.Init.now__ON__silver_translation_java_driver_writeAll] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.translation.java.driver.PwriteSpec.invoke(context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_i), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.DecoratedNode)core.Phead.invoke(context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_l))); } }, context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_silverGen))); } };
		// recurse = writeAll(now, a, tail(l), silverGen)
		silver.translation.java.driver.PwriteAll.localAttributes[silver.translation.java.driver.Init.recurse__ON__silver_translation_java_driver_writeAll] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.translation.java.driver.PwriteAll.invoke(context.localAsIsLazy(silver.translation.java.driver.Init.now__ON__silver_translation_java_driver_writeAll), context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_a), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Ptail.invoke(context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_l))); } }, context.childAsIsLazy(silver.translation.java.driver.PwriteAll.i_silverGen))); } };
		//FUNCTION writeSpec IO ::= i::IO r::Decorated RootSpec silverGen::String 
		// srcPath = silverGen ++ "src/" ++ grammarToPath(r.declaredName)
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.translation.java.driver.PwriteSpec.i_silverGen)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("src/")), (common.StringCatter)((common.StringCatter)silver.driver.util.PgrammarToPath.invoke(context.childAsIsSynthesizedLazy(silver.translation.java.driver.PwriteSpec.i_r, silver.driver.util.Init.silver_definition_env_declaredName__ON__silver_driver_util_RootSpec))))); } };
		// binPath = silverGen ++ "bin/" ++ grammarToPath(r.declaredName)
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.binPath__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.translation.java.driver.PwriteSpec.i_silverGen)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("bin/")), (common.StringCatter)((common.StringCatter)silver.driver.util.PgrammarToPath.invoke(context.childAsIsSynthesizedLazy(silver.translation.java.driver.PwriteSpec.i_r, silver.driver.util.Init.silver_definition_env_declaredName__ON__silver_driver_util_RootSpec))))); } };
		// mkiotest = isDirectory(srcPath, i)
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((core.NIOVal)core.PisDirectory.invoke(context.localAsIsLazy(silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec), context.childAsIsLazy(silver.translation.java.driver.PwriteSpec.i_i))); } };
		// mksrc = if mkiotest.iovalue then mkiotest else mkdir(srcPath, mkiotest.io)
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)context.localDecorated(silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec).synthesized(core.Init.core_iovalue__ON__core_IOVal)) ? context.localDecorated(silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec).undecorate() : ((core.NIOVal)core.Pmkdir.invoke(context.localAsIsLazy(silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)context.localDecorated(silver.translation.java.driver.Init.mkiotest__ON__silver_translation_java_driver_writeSpec).synthesized(core.Init.core_io__ON__core_IOVal)); } }))); } };
		// clean = deleteDirFiles(srcPath, deleteDirFiles(binPath, mksrc.io).io).io
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.clean__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)((core.NIOVal)core.PdeleteDirFiles.invoke(context.localAsIsLazy(silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)((core.NIOVal)core.PdeleteDirFiles.invoke(context.localAsIsLazy(silver.translation.java.driver.Init.binPath__ON__silver_translation_java_driver_writeSpec), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)context.localDecorated(silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec).synthesized(core.Init.core_io__ON__core_IOVal)); } })).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_io__ON__core_IOVal)); } })).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_io__ON__core_IOVal)); } };
		// printio = if mksrc.iovalue then print("\t[" ++ r.declaredName ++ "]\n", clean) else exit(-5, print("\nUnrecoverable Error: Unable to create directory: " ++ srcPath ++ "\nWarning: if some interface file writes were successful, but others not, Silver's temporaries are in an inconsistent state. Use the --clean flag next run.\n\n", mksrc.io))
		silver.translation.java.driver.PwriteSpec.localAttributes[silver.translation.java.driver.Init.printio__ON__silver_translation_java_driver_writeSpec] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)context.localDecorated(silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec).synthesized(core.Init.core_iovalue__ON__core_IOVal)) ? ((Object)core.Pprint.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)(new common.StringCatter("\t[")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)((common.DecoratedNode)context.childAsIs(silver.translation.java.driver.PwriteSpec.i_r)).synthesized(silver.driver.util.Init.silver_definition_env_declaredName__ON__silver_driver_util_RootSpec)), (common.StringCatter)(new common.StringCatter("]\n")))); } }, context.localAsIsLazy(silver.translation.java.driver.Init.clean__ON__silver_translation_java_driver_writeSpec))) : ((Object)core.Pexit.invoke(Integer.valueOf((int)-5), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)core.Pprint.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)(new common.StringCatter("\nUnrecoverable Error: Unable to create directory: ")), (common.StringCatter)new common.StringCatter((common.StringCatter)((common.StringCatter)context.localAsIs(silver.translation.java.driver.Init.srcPath__ON__silver_translation_java_driver_writeSpec)), (common.StringCatter)(new common.StringCatter("\nWarning: if some interface file writes were successful, but others not, Silver's temporaries are in an inconsistent state. Use the --clean flag next run.\n\n")))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)context.localDecorated(silver.translation.java.driver.Init.mksrc__ON__silver_translation_java_driver_writeSpec).synthesized(core.Init.core_io__ON__core_IOVal)); } })); } }))); } };
		//FUNCTION writeFiles IO ::= path::String s::[Pair<String String>] i::IO 
		//FUNCTION zipfileset String ::= s::String 
		//FUNCTION pathLocation String ::= s::String 
		//FUNCTION includeName String ::= gram::String suffix::String 
	}

	public static int count_local__ON__silver_translation_java_driver_xjFlag = 0;
	public static int count_local__ON__silver_translation_java_driver_onejarFlag = 0;
	public static int count_local__ON__silver_translation_java_driver_relativejarFlag = 0;
	public static int count_local__ON__silver_translation_java_driver_includeRTJarFlag = 0;
	public static int count_local__ON__silver_translation_java_driver_buildXmlFlag = 0;
	public static int count_local__ON__silver_translation_java_driver_genJava = 0;
	public static int count_local__ON__silver_translation_java_driver_genBuild = 0;
	public static int count_local__ON__silver_translation_java_driver_writeAll = 0;
	public static int count_local__ON__silver_translation_java_driver_writeSpec = 0;
	public static int count_local__ON__silver_translation_java_driver_writeFiles = 0;
	public static int count_local__ON__silver_translation_java_driver_zipfileset = 0;
	public static int count_local__ON__silver_translation_java_driver_pathLocation = 0;
	public static int count_local__ON__silver_translation_java_driver_includeName = 0;
public static final int silver_translation_java_driver_noJavaGeneration__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int silver_translation_java_driver_buildSingleJar__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int silver_translation_java_driver_relativeJar__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int silver_translation_java_driver_includeRTJars__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int silver_translation_java_driver_buildXmlLocation__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int buildXmlLocation__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int extraTopLevelDecls__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int extraDistDeps__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int extraJarsDeps__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int extraGrammarsDeps__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int classpathCompiler__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int classpathRuntime__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int extraManifestAttributes__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int outputFile__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int buildXml__ON__silver_driver_util_compilation = silver.driver.util.Init.count_local__ON__silver_driver_util_compilation++;
public static final int pr__ON__silver_translation_java_driver_genJava = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_genJava++;
public static final int now__ON__silver_translation_java_driver_writeAll = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeAll++;
public static final int recurse__ON__silver_translation_java_driver_writeAll = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeAll++;
public static final int srcPath__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
public static final int binPath__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
public static final int mkiotest__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
public static final int mksrc__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
public static final int clean__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
public static final int printio__ON__silver_translation_java_driver_writeSpec = silver.translation.java.driver.Init.count_local__ON__silver_translation_java_driver_writeSpec++;
}
