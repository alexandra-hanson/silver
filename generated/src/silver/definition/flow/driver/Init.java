package silver.definition.flow.driver;

public class Init{

	private static boolean preInit = false;
	private static boolean init = false;
	private static boolean postInit = false;

	public static void initAllStatics(){
		if(preInit) return;
		preInit = true;

		core.monad.Init.initAllStatics();
		silver.definition.flow.env.Init.initAllStatics();
		silver.analysis.typechecking.core.Init.initAllStatics();
		silver.driver.util.Init.initAllStatics();
		core.Init.initAllStatics();
		silver.util.raw.treeset.Init.initAllStatics();
		silver.util.raw.graph.Init.initAllStatics();
		silver.util.raw.treemap.Init.initAllStatics();
		silver.modification.autocopyattr.Init.initAllStatics();
		silver.analysis.warnings.defs.Init.initAllStatics();
		silver.definition.flow.ast.Init.initAllStatics();
		silver.definition.env.Init.initAllStatics();
		silver.definition.core.Init.initAllStatics();
		silver.util.Init.initAllStatics();
		silver.util.cmdargs.Init.initAllStatics();
		silver.driver.Init.initAllStatics();
		silver.definition.type.Init.initAllStatics();
		silver.definition.flow.driver.Init.initAllStatics();

	}

	public static void init(){
		if(init) return;
		init = true;

		setupInheritedAttributes();

		core.monad.Init.init();
		silver.definition.flow.env.Init.init();
		silver.analysis.typechecking.core.Init.init();
		silver.driver.util.Init.init();
		core.Init.init();
		silver.util.raw.treeset.Init.init();
		silver.util.raw.graph.Init.init();
		silver.util.raw.treemap.Init.init();
		silver.modification.autocopyattr.Init.init();
		silver.analysis.warnings.defs.Init.init();
		silver.definition.flow.ast.Init.init();
		silver.definition.env.Init.init();
		silver.definition.core.Init.init();
		silver.util.Init.init();
		silver.util.cmdargs.Init.init();
		silver.driver.Init.init();
		silver.definition.type.Init.init();
		silver.definition.flow.driver.Init.init();

		initProductionAttributeDefinitions();
	}

	public static void postInit(){
		if(postInit) return;
		postInit = true;

		core.monad.Init.postInit();
		silver.definition.flow.env.Init.postInit();
		silver.analysis.typechecking.core.Init.postInit();
		silver.driver.util.Init.postInit();
		core.Init.postInit();
		silver.util.raw.treeset.Init.postInit();
		silver.util.raw.graph.Init.postInit();
		silver.util.raw.treemap.Init.postInit();
		silver.modification.autocopyattr.Init.postInit();
		silver.analysis.warnings.defs.Init.postInit();
		silver.definition.flow.ast.Init.postInit();
		silver.definition.env.Init.postInit();
		silver.definition.core.Init.postInit();
		silver.util.Init.postInit();
		silver.util.cmdargs.Init.postInit();
		silver.driver.Init.postInit();
		silver.definition.type.Init.postInit();
		silver.definition.flow.driver.Init.postInit();


		common.Decorator.applyDecorators(silver.definition.flow.driver.NProductionGraph.decorators, PproductionGraph.class);
		common.Decorator.applyDecorators(silver.definition.flow.driver.NStitchPoint.decorators, PnonterminalStitchPoint.class);
		common.Decorator.applyDecorators(silver.definition.flow.driver.NStitchPoint.decorators, PprojectionStitchPoint.class);
		common.Decorator.applyDecorators(silver.util.cmdargs.NCmdArgs.decorators, PdumpFlowGraphFlag.class);
		common.Decorator.applyDecorators(silver.driver.util.NDriverAction.decorators, PdumpFlowGraphAction.class);
	}

	private static void setupInheritedAttributes(){
		silver.definition.flow.driver.NProductionGraph.occurs_inh[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:flowTypes";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_stitchedGraph__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:stitchedGraph";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_prod__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:prod";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_lhsNt__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:lhsNt";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_transitiveClosure__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:transitiveClosure";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_edgeMap__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:edgeMap";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_cullSuspect__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:cullSuspect";
		silver.definition.flow.driver.NProductionGraph.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeVertexes__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:flowTypeVertexes";
		silver.definition.flow.driver.NProductionGraph.occurs_inh[silver.definition.flow.driver.Init.silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_ProductionGraph] = "silver:definition:flow:driver:prodGraphs";
		//	local attribute stitchedGraph::ProductionGraph;
		silver.definition.flow.driver.PupdateGraph.localInheritedAttributes[silver.definition.flow.driver.Init.stitchedGraph__ON__silver_definition_flow_driver_updateGraph] = new common.Lazy[silver.definition.flow.driver.NProductionGraph.num_inh_attrs];
		silver.definition.flow.driver.PupdateGraph.occurs_local[silver.definition.flow.driver.Init.stitchedGraph__ON__silver_definition_flow_driver_updateGraph] = "silver:definition:flow:driver:updateGraph:local:stitchedGraph";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:prod";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:nt";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:attrs";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:syns";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:inhs";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.autos__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:autos";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:nonForwarding";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:normalEdges";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.fixedEdges__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:fixedEdges";
		//	local attribute synsBySuspicion::Pair<[String] [String]>;
		silver.definition.flow.driver.PconstructProductionGraph.localInheritedAttributes[silver.definition.flow.driver.Init.synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy[core.NPair.num_inh_attrs];
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:synsBySuspicion";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:suspectEdges";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:stitchPoints";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.flowTypeVertexesOverall__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:flowTypeVertexesOverall";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.flowTypeSpecs__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:flowTypeSpecs";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.flowTypeVertexes__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:flowTypeVertexes";
		silver.definition.flow.driver.PconstructProductionGraph.occurs_local[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructProductionGraph] = "silver:definition:flow:driver:constructProductionGraph:local:initialGraph";
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:defs";
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:normalEdges";
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:suspectEdges";
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:initialGraph";
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:stitchPoints";
		//	local attribute g::ProductionGraph;
		silver.definition.flow.driver.PconstructFunctionGraph.localInheritedAttributes[silver.definition.flow.driver.Init.g__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy[silver.definition.flow.driver.NProductionGraph.num_inh_attrs];
		silver.definition.flow.driver.PconstructFunctionGraph.occurs_local[silver.definition.flow.driver.Init.g__ON__silver_definition_flow_driver_constructFunctionGraph] = "silver:definition:flow:driver:constructFunctionGraph:local:g";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:attrs";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:syns";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.phantomEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:phantomEdges";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:stitchPoints";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.flowTypeVertexes__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:flowTypeVertexes";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:initialGraph";
		silver.definition.flow.driver.PconstructPhantomProductionGraph.occurs_local[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = "silver:definition:flow:driver:constructPhantomProductionGraph:local:suspectEdges";
		silver.definition.flow.driver.PfindAdmissibleEdges.occurs_local[silver.definition.flow.driver.Init.currentDeps__ON__silver_definition_flow_driver_findAdmissibleEdges] = "silver:definition:flow:driver:findAdmissibleEdges:local:currentDeps";
		silver.definition.flow.driver.PfindAdmissibleEdges.occurs_local[silver.definition.flow.driver.Init.targetNotSource__ON__silver_definition_flow_driver_findAdmissibleEdges] = "silver:definition:flow:driver:findAdmissibleEdges:local:targetNotSource";
		silver.definition.flow.driver.PfindAdmissibleEdges.occurs_local[silver.definition.flow.driver.Init.validDeps__ON__silver_definition_flow_driver_findAdmissibleEdges] = "silver:definition:flow:driver:findAdmissibleEdges:local:validDeps";
		silver.definition.flow.driver.PfindFlowType.occurs_local[silver.definition.flow.driver.Init.lookup__ON__silver_definition_flow_driver_findFlowType] = "silver:definition:flow:driver:findFlowType:local:lookup";
		silver.definition.flow.driver.PfindProductionGraph.occurs_local[silver.definition.flow.driver.Init.lookup__ON__silver_definition_flow_driver_findProductionGraph] = "silver:definition:flow:driver:findProductionGraph:local:lookup";
		silver.definition.flow.driver.NStitchPoint.occurs_inh[silver.definition.flow.driver.Init.silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_StitchPoint] = "silver:definition:flow:driver:prodGraphs";
		silver.definition.flow.driver.NStitchPoint.occurs_inh[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_StitchPoint] = "silver:definition:flow:driver:flowTypes";
		silver.definition.flow.driver.NStitchPoint.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_stitchEdges__ON__silver_definition_flow_driver_StitchPoint] = "silver:definition:flow:driver:stitchEdges";
		silver.util.cmdargs.NCmdArgs.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_dumpFlowGraph__ON__silver_util_cmdargs_CmdArgs] = "silver:definition:flow:driver:dumpFlowGraph";
		silver.definition.flow.driver.PunList.occurs_local[silver.definition.flow.driver.Init.recurse__ON__silver_definition_flow_driver_unList] = "silver:definition:flow:driver:unList:local:recurse";
		silver.definition.flow.driver.PgenerateFlowDotGraph.occurs_local[silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_generateFlowDotGraph] = "silver:definition:flow:driver:generateFlowDotGraph:local:nt";
		silver.definition.flow.driver.PgenerateFlowDotGraph.occurs_local[silver.definition.flow.driver.Init.edges__ON__silver_definition_flow_driver_generateFlowDotGraph] = "silver:definition:flow:driver:generateFlowDotGraph:local:edges";
		silver.definition.flow.driver.PmakeLabelDcls.occurs_local[silver.definition.flow.driver.Init.a__ON__silver_definition_flow_driver_makeLabelDcls] = "silver:definition:flow:driver:makeLabelDcls:local:a";
		silver.definition.flow.ast.NFlowVertex.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = "silver:definition:flow:driver:dotName";
		silver.definition.flow.driver.PcomputeInitialFlowTypes.occurs_local[silver.definition.flow.driver.Init.specs__ON__silver_definition_flow_driver_computeInitialFlowTypes] = "silver:definition:flow:driver:computeInitialFlowTypes:local:specs";
		silver.definition.flow.driver.PfullySolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.prodEnv__ON__silver_definition_flow_driver_fullySolveFlowTypes] = "silver:definition:flow:driver:fullySolveFlowTypes:local:prodEnv";
		//	local attribute iter::Pair<Boolean Pair<[ProductionGraph] EnvTree<FlowType>>>;
		silver.definition.flow.driver.PfullySolveFlowTypes.localInheritedAttributes[silver.definition.flow.driver.Init.iter__ON__silver_definition_flow_driver_fullySolveFlowTypes] = new common.Lazy[core.NPair.num_inh_attrs];
		silver.definition.flow.driver.PfullySolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.iter__ON__silver_definition_flow_driver_fullySolveFlowTypes] = "silver:definition:flow:driver:fullySolveFlowTypes:local:iter";
		//	local attribute updatedGraph::ProductionGraph;
		silver.definition.flow.driver.PsolveFlowTypes.localInheritedAttributes[silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy[silver.definition.flow.driver.NProductionGraph.num_inh_attrs];
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:updatedGraph";
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.currentFlowType__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:currentFlowType";
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.synExpansion__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:synExpansion";
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.brandNewEdges__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:brandNewEdges";
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.newFlowType__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:newFlowType";
		//	local attribute recurse::Pair<Boolean Pair<[ProductionGraph] EnvTree<FlowType>>>;
		silver.definition.flow.driver.PsolveFlowTypes.localInheritedAttributes[silver.definition.flow.driver.Init.recurse__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy[core.NPair.num_inh_attrs];
		silver.definition.flow.driver.PsolveFlowTypes.occurs_local[silver.definition.flow.driver.Init.recurse__ON__silver_definition_flow_driver_solveFlowTypes] = "silver:definition:flow:driver:solveFlowTypes:local:recurse";
		silver.definition.flow.driver.PfindBrandNewEdges.occurs_local[silver.definition.flow.driver.Init.syn__ON__silver_definition_flow_driver_findBrandNewEdges] = "silver:definition:flow:driver:findBrandNewEdges:local:syn";
		silver.definition.flow.driver.PfindBrandNewEdges.occurs_local[silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_findBrandNewEdges] = "silver:definition:flow:driver:findBrandNewEdges:local:inhs";
		silver.definition.flow.driver.PfindBrandNewEdges.occurs_local[silver.definition.flow.driver.Init.newinhs__ON__silver_definition_flow_driver_findBrandNewEdges] = "silver:definition:flow:driver:findBrandNewEdges:local:newinhs";
		silver.definition.flow.driver.PfindBrandNewEdges.occurs_local[silver.definition.flow.driver.Init.newEdges__ON__silver_definition_flow_driver_findBrandNewEdges] = "silver:definition:flow:driver:findBrandNewEdges:local:newEdges";
		silver.definition.flow.ast.NFlowVertex.occurs_syn[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = "silver:definition:flow:driver:flowTypeName";
	}

	private static void initProductionAttributeDefinitions(){
		silver.definition.flow.driver.PproductionGraph.initProductionAttributeDefinitions();
		//FUNCTION updateGraph ProductionGraph ::= graph::ProductionGraph prodEnv::EnvTree<ProductionGraph> ntEnv::EnvTree<FlowType> 
		// graph.flowTypes = ntEnv
		silver.definition.flow.driver.PupdateGraph.childInheritedAttributes[silver.definition.flow.driver.PupdateGraph.i_graph][silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_ProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)context.childAsIs(silver.definition.flow.driver.PupdateGraph.i_ntEnv)); } };
		// graph.prodGraphs = prodEnv
		silver.definition.flow.driver.PupdateGraph.childInheritedAttributes[silver.definition.flow.driver.PupdateGraph.i_graph][silver.definition.flow.driver.Init.silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_ProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)context.childAsIs(silver.definition.flow.driver.PupdateGraph.i_prodEnv)); } };
		// stitchedGraph = graph.stitchedGraph
		silver.definition.flow.driver.PupdateGraph.localAttributes[silver.definition.flow.driver.Init.stitchedGraph__ON__silver_definition_flow_driver_updateGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((silver.definition.flow.driver.NProductionGraph)context.childDecorated(silver.definition.flow.driver.PupdateGraph.i_graph).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_stitchedGraph__ON__silver_definition_flow_driver_ProductionGraph)); } };
		// stitchedGraph.flowTypes = ntEnv
		silver.definition.flow.driver.PupdateGraph.localInheritedAttributes[silver.definition.flow.driver.Init.stitchedGraph__ON__silver_definition_flow_driver_updateGraph][silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_ProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)context.childAsIs(silver.definition.flow.driver.PupdateGraph.i_ntEnv)); } };
		//FUNCTION computeAllProductionGraphs [ProductionGraph] ::= prods::[DclInfo] prodTree::EnvTree<FlowDef> flowEnv::Decorated FlowEnv realEnv::Decorated Env 
		//FUNCTION constructProductionGraph ProductionGraph ::= dcl::DclInfo defs::[FlowDef] flowEnv::Decorated FlowEnv realEnv::Decorated Env 
		// prod = dcl.fullName
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childDecorated(silver.definition.flow.driver.PconstructProductionGraph.i_dcl).synthesized(silver.definition.env.Init.silver_definition_env_fullName__ON__silver_definition_env_DclInfo)); } };
		// nt = dcl.namedSignature.outputElement.typerep.typeName
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)((silver.definition.type.NType)((silver.definition.env.NNamedSignatureElement)((silver.definition.env.NNamedSignature)context.childDecorated(silver.definition.flow.driver.PconstructProductionGraph.i_dcl).synthesized(silver.definition.env.Init.silver_definition_env_namedSignature__ON__silver_definition_env_DclInfo)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.env.Init.silver_definition_env_outputElement__ON__silver_definition_env_NamedSignature)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.env.Init.silver_definition_env_typerep__ON__silver_definition_env_NamedSignatureElement)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.env.Init.silver_definition_env_typeName__ON__silver_definition_type_Type)); } };
		// attrs = getAttrsOn(nt, realEnv)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.env.PgetAttrsOn.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv))); } };
		// syns = map((.attrOccurring), filter(isOccursSynthesized(_, realEnv), attrs))
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.AttributeSection.Undecorated(silver.definition.env.Init.silver_definition_env_attrOccurring__ON__silver_definition_env_DclInfo, context), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.analysis.warnings.defs.PisOccursSynthesized.factory.invokePartial(new int[]{1}, new Object[]{context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv)}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructProductionGraph))); } })); } };
		// inhs = map((.attrOccurring), filter(isOccursInherited(_, realEnv), attrs))
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.AttributeSection.Undecorated(silver.definition.env.Init.silver_definition_env_attrOccurring__ON__silver_definition_env_DclInfo, context), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.definition.flow.driver.PisOccursInherited.factory.invokePartial(new int[]{1}, new Object[]{context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv)}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructProductionGraph))); } })); } };
		// autos = filter(isAutocopy(_, realEnv), inhs)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.autos__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.analysis.warnings.defs.PisAutocopy.factory.invokePartial(new int[]{1}, new Object[]{context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv)}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_constructProductionGraph))); } };
		// nonForwarding = null(lookupFwd(prod, flowEnv))
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Boolean)core.Pnull.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.env.PlookupFwd.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))); } })); } };
		// normalEdges = flatMap((.flowEdges), defs)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.PflatMap.invoke(new common.AttributeSection.Undecorated(silver.definition.flow.ast.Init.silver_definition_flow_ast_flowEdges__ON__silver_definition_flow_ast_FlowDef, context), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_defs))); } };
		// fixedEdges = normalEdges ++ (if nonForwarding then addDefEqs(prod, nt, syns, flowEnv) else (pair(lhsSynVertex("forward"), forwardEqVertex()) :: addFwdSynEqs(prod, synsBySuspicion.fst, flowEnv)) ++ addFwdInhEqs(prod, inhs, flowEnv)) ++ addAllAutoCopyEqs(prod, dcl.namedSignature.inputElements, autos, flowEnv, realEnv)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.fixedEdges__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructProductionGraph), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return (((Boolean)context.localAsIs(silver.definition.flow.driver.Init.nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph)) ? ((common.ConsCell)silver.definition.flow.driver.PaddDefEqs.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), context.localAsIsLazy(silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph), context.localAsIsLazy(silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))) : ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)new silver.definition.flow.ast.PlhsSynVertex((new common.StringCatter("forward")))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)silver.definition.flow.ast.PforwardEqVertex.invoke()); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PaddFwdSynEqs.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)context.localDecorated(silver.definition.flow.driver.Init.synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph).synthesized(core.Init.core_fst__ON__core_Pair)); } }, context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PaddFwdInhEqs.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), context.localAsIsLazy(silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))); } }))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PaddAllAutoCopyEqs.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((silver.definition.env.NNamedSignature)context.childDecorated(silver.definition.flow.driver.PconstructProductionGraph.i_dcl).synthesized(silver.definition.env.Init.silver_definition_env_namedSignature__ON__silver_definition_env_DclInfo)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.env.Init.silver_definition_env_inputElements__ON__silver_definition_env_NamedSignature)); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.autos__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv))); } })); } })); } };
		// synsBySuspicion = partition(contains(_, getNonSuspectAttrsForProd(prod, flowEnv)), syns)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((core.NPair)core.Ppartition.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.util.Pcontains.factory.invokePartial(new int[]{1}, new Object[]{new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.env.PgetNonSuspectAttrsForProd.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))); } }}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructProductionGraph))); } };
		// suspectEdges = flatMap((.suspectFlowEdges), defs) ++ if nonForwarding then [] else addFwdSynEqs(prod, synsBySuspicion.snd, flowEnv)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.PflatMap.invoke(new common.AttributeSection.Undecorated(silver.definition.flow.ast.Init.silver_definition_flow_ast_suspectFlowEdges__ON__silver_definition_flow_ast_FlowDef, context), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_defs))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return (((Boolean)context.localAsIs(silver.definition.flow.driver.Init.nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph)) ? ((common.ConsCell)core.Pnil.invoke()) : ((common.ConsCell)silver.definition.flow.driver.PaddFwdSynEqs.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.prod__ON__silver_definition_flow_driver_constructProductionGraph), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)context.localDecorated(silver.definition.flow.driver.Init.synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph).synthesized(core.Init.core_snd__ON__core_Pair)); } }, context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv)))); } })); } };
		// stitchPoints = rhsStitchPoints(dcl.namedSignature.inputElements) ++ localStitchPoints(nt, defs) ++ patternStitchPoints(realEnv, defs)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PrhsStitchPoints.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((silver.definition.env.NNamedSignature)context.childDecorated(silver.definition.flow.driver.PconstructProductionGraph.i_dcl).synthesized(silver.definition.env.Init.silver_definition_env_namedSignature__ON__silver_definition_env_DclInfo)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.env.Init.silver_definition_env_inputElements__ON__silver_definition_env_NamedSignature)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PlocalStitchPoints.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_defs))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PpatternStitchPoints.invoke(context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_realEnv), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_defs))); } })); } })); } };
		// flowTypeVertexesOverall = (if nonForwarding then [] else [ forwardEqVertex() ]) ++ map(lhsSynVertex, syns)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.flowTypeVertexesOverall__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return (((Boolean)context.localAsIs(silver.definition.flow.driver.Init.nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph)) ? ((common.ConsCell)core.Pnil.invoke()) : ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)silver.definition.flow.ast.PforwardEqVertex.invoke()); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } }))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.definition.flow.ast.PlhsSynVertex.factory, context.localAsIsLazy(silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructProductionGraph))); } })); } };
		// flowTypeSpecs = getSpecifiedSynsForNt(nt, flowEnv)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.flowTypeSpecs__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.env.PgetSpecifiedSynsForNt.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_constructProductionGraph), context.childAsIsLazy(silver.definition.flow.driver.PconstructProductionGraph.i_flowEnv))); } };
		// flowTypeVertexes = filter(\ x::FlowVertex  -> ! contains(x.flowTypeName, flowTypeSpecs), flowTypeVertexesOverall)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.flowTypeVertexes__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke((new common.NodeFactory<Boolean>() {
  public final Boolean invoke(final Object[] args, final Object[] namedArgs) {
    final Object __SV_LAMBDA_PARAM_5944_x = args[0];

    return (!((Boolean)silver.util.Pcontains.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.StringCatter)((silver.definition.flow.ast.NFlowVertex)common.Util.demand(__SV_LAMBDA_PARAM_5944_x)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex)); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.flowTypeSpecs__ON__silver_definition_flow_driver_constructProductionGraph))));
  }
}), context.localAsIsLazy(silver.definition.flow.driver.Init.flowTypeVertexesOverall__ON__silver_definition_flow_driver_constructProductionGraph))); } };
		// initialGraph = createFlowGraph(fixedEdges)
		silver.definition.flow.driver.PconstructProductionGraph.localAttributes[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.definition.flow.driver.PcreateFlowGraph.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.fixedEdges__ON__silver_definition_flow_driver_constructProductionGraph))); } };
		//FUNCTION constructFunctionGraph ProductionGraph ::= ns::NamedSignature flowEnv::Decorated FlowEnv realEnv::Decorated Env prodEnv::EnvTree<ProductionGraph> ntEnv::EnvTree<FlowType> 
		// defs = getGraphContribsFor(ns.fullName, flowEnv)
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.env.PgetGraphContribsFor.invoke(context.childDecoratedSynthesizedLazy(silver.definition.flow.driver.PconstructFunctionGraph.i_ns, silver.definition.env.Init.silver_definition_env_fullName__ON__silver_definition_env_NamedSignature), context.childAsIsLazy(silver.definition.flow.driver.PconstructFunctionGraph.i_flowEnv))); } };
		// normalEdges = flatMap((.flowEdges), defs)
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.PflatMap.invoke(new common.AttributeSection.Undecorated(silver.definition.flow.ast.Init.silver_definition_flow_ast_flowEdges__ON__silver_definition_flow_ast_FlowDef, context), context.localAsIsLazy(silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph))); } };
		// suspectEdges = flatMap((.suspectFlowEdges), defs)
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.PflatMap.invoke(new common.AttributeSection.Undecorated(silver.definition.flow.ast.Init.silver_definition_flow_ast_suspectFlowEdges__ON__silver_definition_flow_ast_FlowDef, context), context.localAsIsLazy(silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph))); } };
		// initialGraph = createFlowGraph(normalEdges)
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.definition.flow.driver.PcreateFlowGraph.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.normalEdges__ON__silver_definition_flow_driver_constructFunctionGraph))); } };
		// stitchPoints = rhsStitchPoints(ns.inputElements) ++ localStitchPoints(error("functions have no LHS, no forwarding defs"), defs) ++ patternStitchPoints(realEnv, defs)
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PrhsStitchPoints.invoke(context.childDecoratedSynthesizedLazy(silver.definition.flow.driver.PconstructFunctionGraph.i_ns, silver.definition.env.Init.silver_definition_env_inputElements__ON__silver_definition_env_NamedSignature))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PlocalStitchPoints.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("functions have no LHS, no forwarding defs")))); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PpatternStitchPoints.invoke(context.childAsIsLazy(silver.definition.flow.driver.PconstructFunctionGraph.i_realEnv), context.localAsIsLazy(silver.definition.flow.driver.Init.defs__ON__silver_definition_flow_driver_constructFunctionGraph))); } })); } })); } };
		// g = productionGraph(ns.fullName, "::nolhs", [], initialGraph, suspectEdges, stitchPoints).transitiveClosure
		silver.definition.flow.driver.PconstructFunctionGraph.localAttributes[silver.definition.flow.driver.Init.g__ON__silver_definition_flow_driver_constructFunctionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((silver.definition.flow.driver.NProductionGraph)((silver.definition.flow.driver.NProductionGraph)new silver.definition.flow.driver.PproductionGraph(context.childDecoratedSynthesizedLazy(silver.definition.flow.driver.PconstructFunctionGraph.i_ns, silver.definition.env.Init.silver_definition_env_fullName__ON__silver_definition_env_NamedSignature), (new common.StringCatter("::nolhs")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructFunctionGraph), context.localAsIsLazy(silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructFunctionGraph), context.localAsIsLazy(silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructFunctionGraph))).decorate(context, (common.Lazy[])null).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_transitiveClosure__ON__silver_definition_flow_driver_ProductionGraph)); } };
		//FUNCTION constructPhantomProductionGraph ProductionGraph ::= nt::String flowEnv::Decorated FlowEnv realEnv::Decorated Env 
		// attrs = getAttrsOn(nt, realEnv)
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.env.PgetAttrsOn.invoke(context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_nt), context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_realEnv))); } };
		// syns = map((.attrOccurring), filter(isOccursSynthesized(_, realEnv), attrs))
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.AttributeSection.Undecorated(silver.definition.env.Init.silver_definition_env_attrOccurring__ON__silver_definition_env_DclInfo, context), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.analysis.warnings.defs.PisOccursSynthesized.factory.invokePartial(new int[]{1}, new Object[]{context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_realEnv)}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.attrs__ON__silver_definition_flow_driver_constructPhantomProductionGraph))); } })); } };
		// phantomEdges = (pair(lhsSynVertex("forward"), forwardEqVertex()) :: map(getPhantomEdge, getExtSynsFor(nt, flowEnv)))
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.phantomEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)new silver.definition.flow.ast.PlhsSynVertex((new common.StringCatter("forward")))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)silver.definition.flow.ast.PforwardEqVertex.invoke()); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.definition.flow.driver.PgetPhantomEdge.factory, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.env.PgetExtSynsFor.invoke(context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_nt), context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_flowEnv))); } })); } })); } };
		// stitchPoints = [ nonterminalStitchPoint(nt, lhsVertexType) ]
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.stitchPoints__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.driver.NStitchPoint)new silver.definition.flow.driver.PnonterminalStitchPoint(context.childAsIsLazy(silver.definition.flow.driver.PconstructPhantomProductionGraph.i_nt), silver.definition.flow.ast.Init.lhsVertexType)); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } };
		// flowTypeVertexes = [ forwardEqVertex() ] ++ map(lhsSynVertex, syns)
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.flowTypeVertexes__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pappend.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.ast.NFlowVertex)silver.definition.flow.ast.PforwardEqVertex.invoke()); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.definition.flow.ast.PlhsSynVertex.factory, context.localAsIsLazy(silver.definition.flow.driver.Init.syns__ON__silver_definition_flow_driver_constructPhantomProductionGraph))); } })); } };
		// initialGraph = createFlowGraph(phantomEdges)
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.initialGraph__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.definition.flow.driver.PcreateFlowGraph.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.phantomEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph))); } };
		// suspectEdges = []
		silver.definition.flow.driver.PconstructPhantomProductionGraph.localAttributes[silver.definition.flow.driver.Init.suspectEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } };
		//FUNCTION getPhantomEdge Pair<FlowVertex FlowVertex> ::= f::FlowDef 
		//FUNCTION addFwdSynEqs [Pair<FlowVertex FlowVertex>] ::= prod::ProdName syns::[String] flowEnv::Decorated FlowEnv 
		//FUNCTION addFwdInhEqs [Pair<FlowVertex FlowVertex>] ::= prod::ProdName inhs::[String] flowEnv::Decorated FlowEnv 
		//FUNCTION addDefEqs [Pair<FlowVertex FlowVertex>] ::= prod::ProdName nt::NtName syns::[String] flowEnv::Decorated FlowEnv 
		//FUNCTION addAllAutoCopyEqs [Pair<FlowVertex FlowVertex>] ::= prod::ProdName sigNames::[NamedSignatureElement] inhs::[String] flowEnv::Decorated FlowEnv realEnv::Decorated Env 
		//FUNCTION addAutocopyEqs [Pair<FlowVertex FlowVertex>] ::= prod::ProdName sigName::NamedSignatureElement inhs::[String] flowEnv::Decorated FlowEnv realEnv::Decorated Env 
		//FUNCTION localStitchPoints [StitchPoint] ::= nt::NtName d::[FlowDef] 
		//FUNCTION rhsStitchPoints [StitchPoint] ::= rhs::[NamedSignatureElement] 
		//FUNCTION patternStitchPoints [StitchPoint] ::= realEnv::Decorated Env defs::[FlowDef] 
		//FUNCTION patVarStitchPoints [StitchPoint] ::= matchProd::String scrutinee::VertexType realEnv::Decorated Env var::PatternVarProjection 
		//FUNCTION getInhsForNtForPatternVars [String] ::= nt::String realEnv::Decorated Env 
		//FUNCTION prodGraphToEnv Pair<String ProductionGraph> ::= p::ProductionGraph 
		//FUNCTION isOccursInherited Boolean ::= occs::DclInfo e::Decorated Env 
		//FUNCTION findAdmissibleEdges [Pair<FlowVertex FlowVertex>] ::= edge::Pair<FlowVertex FlowVertex> graph::g:Graph<FlowVertex> ft::FlowType 
		// currentDeps = g:edgesFrom(edge.fst.flowTypeName, ft)
		silver.definition.flow.driver.PfindAdmissibleEdges.localAttributes[silver.definition.flow.driver.Init.currentDeps__ON__silver_definition_flow_driver_findAdmissibleEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.util.raw.graph.PedgesFrom.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.StringCatter)((silver.definition.flow.ast.NFlowVertex)context.childDecorated(silver.definition.flow.driver.PfindAdmissibleEdges.i_edge).synthesized(core.Init.core_fst__ON__core_Pair)).decorate(context, (common.Lazy[])null).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex)); } }, context.childAsIsLazy(silver.definition.flow.driver.PfindAdmissibleEdges.i_ft))); } };
		// targetNotSource = set:difference(g:edgesFrom(edge.snd, graph), g:edgesFrom(edge.fst, graph))
		silver.definition.flow.driver.PfindAdmissibleEdges.localAttributes[silver.definition.flow.driver.Init.targetNotSource__ON__silver_definition_flow_driver_findAdmissibleEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.util.raw.treeset.Pdifference.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)silver.util.raw.graph.PedgesFrom.invoke(context.childDecoratedSynthesizedLazy(silver.definition.flow.driver.PfindAdmissibleEdges.i_edge, core.Init.core_snd__ON__core_Pair), context.childAsIsLazy(silver.definition.flow.driver.PfindAdmissibleEdges.i_graph))); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)silver.util.raw.graph.PedgesFrom.invoke(context.childDecoratedSynthesizedLazy(silver.definition.flow.driver.PfindAdmissibleEdges.i_edge, core.Init.core_fst__ON__core_Pair), context.childAsIsLazy(silver.definition.flow.driver.PfindAdmissibleEdges.i_graph))); } })); } };
		// validDeps = filter(isLhsInhSet(_, currentDeps), set:toList(targetNotSource))
		silver.definition.flow.driver.PfindAdmissibleEdges.localAttributes[silver.definition.flow.driver.Init.validDeps__ON__silver_definition_flow_driver_findAdmissibleEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pfilter.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.definition.flow.driver.PisLhsInhSet.factory.invokePartial(new int[]{1}, new Object[]{context.localAsIsLazy(silver.definition.flow.driver.Init.currentDeps__ON__silver_definition_flow_driver_findAdmissibleEdges)}); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.util.raw.treeset.PtoList.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.targetNotSource__ON__silver_definition_flow_driver_findAdmissibleEdges))); } })); } };
		//FUNCTION findFlowType FlowType ::= prod::String e::EnvTree<FlowType> 
		// lookup = searchEnvTree(prod, e)
		silver.definition.flow.driver.PfindFlowType.localAttributes[silver.definition.flow.driver.Init.lookup__ON__silver_definition_flow_driver_findFlowType] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.env.PsearchEnvTree.invoke(context.childAsIsLazy(silver.definition.flow.driver.PfindFlowType.i_prod), context.childAsIsLazy(silver.definition.flow.driver.PfindFlowType.i_e))); } };
		//FUNCTION findProductionGraph ProductionGraph ::= n::String l::EnvTree<ProductionGraph> 
		// lookup = searchEnvTree(n, l)
		silver.definition.flow.driver.PfindProductionGraph.localAttributes[silver.definition.flow.driver.Init.lookup__ON__silver_definition_flow_driver_findProductionGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.env.PsearchEnvTree.invoke(context.childAsIsLazy(silver.definition.flow.driver.PfindProductionGraph.i_n), context.childAsIsLazy(silver.definition.flow.driver.PfindProductionGraph.i_l))); } };
		//FUNCTION expandGraph [FlowVertex] ::= v::[FlowVertex] e::ProductionGraph 
		//FUNCTION onlyLhsInh set:Set<String> ::= s::[FlowVertex] 
		//FUNCTION inhDepsForSyn set:Set<String> ::= syn::String nt::String flow::EnvTree<FlowType> 
		//FUNCTION isLhsInhSet Boolean ::= v::FlowVertex inhSet::set:Set<String> 
		//FUNCTION compareFlowVertex Integer ::= a::FlowVertex b::FlowVertex 
		//FUNCTION createFlowGraph g:Graph<FlowVertex> ::= l::[Pair<FlowVertex FlowVertex>] 
		//FUNCTION extendFlowGraph g:Graph<FlowVertex> ::= l::[Pair<FlowVertex FlowVertex>] g::g:Graph<FlowVertex> 
		//FUNCTION transitiveClose g:Graph<FlowVertex> ::= graph::g:Graph<FlowVertex> 
		//FUNCTION repairClosure g:Graph<FlowVertex> ::= newEdges::[Pair<FlowVertex FlowVertex>] graph::g:Graph<FlowVertex> 
		silver.definition.flow.driver.PnonterminalStitchPoint.initProductionAttributeDefinitions();
		silver.definition.flow.driver.PprojectionStitchPoint.initProductionAttributeDefinitions();
		//FUNCTION projectAttribute [Pair<FlowVertex FlowVertex>] ::= attr::String sourceType::VertexType targetType::VertexType prodType::VertexType prod::ProductionGraph 
		//FUNCTION stitchEdgesFor [Pair<FlowVertex FlowVertex>] ::= sp::StitchPoint ntEnv::EnvTree<FlowType> prodEnv::EnvTree<ProductionGraph> 
		// sp.prodGraphs = prodEnv
		silver.definition.flow.driver.PstitchEdgesFor.childInheritedAttributes[silver.definition.flow.driver.PstitchEdgesFor.i_sp][silver.definition.flow.driver.Init.silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_StitchPoint] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)context.childAsIs(silver.definition.flow.driver.PstitchEdgesFor.i_prodEnv)); } };
		// sp.flowTypes = ntEnv
		silver.definition.flow.driver.PstitchEdgesFor.childInheritedAttributes[silver.definition.flow.driver.PstitchEdgesFor.i_sp][silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_StitchPoint] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)context.childAsIs(silver.definition.flow.driver.PstitchEdgesFor.i_ntEnv)); } };
		//FUNCTION edgeIsNew Boolean ::= edge::Pair<FlowVertex FlowVertex> e::g:Graph<FlowVertex> 
		//FUNCTION flowTypeEdge Pair<FlowVertex FlowVertex> ::= vt::VertexType edge::Pair<String String> 
		//ASPECT PRODUCTION endCmdArgs top ::= _ 
		// top.dumpFlowGraph = false
		silver.util.cmdargs.PendCmdArgs.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dumpFlowGraph__ON__silver_util_cmdargs_CmdArgs] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return false; } };
		silver.definition.flow.driver.PdumpFlowGraphFlag.initProductionAttributeDefinitions();
		//ASPECT FUNCTION parseArgs Either<String Decorated CmdArgs> ::= args::[String] 
		// flags <- [ pair("--dump-flow-graph", flag(dumpFlowGraphFlag)), pair("--dump-flow-graphs", flag(dumpFlowGraphFlag)) ]
		((common.CollectionAttribute)silver.driver.PparseArgs.localAttributes[silver.driver.Init.flags__ON__silver_driver_parseArgs]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--dump-flow-graph")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.definition.flow.driver.PdumpFlowGraphFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((core.NPair)new core.Ppair((new common.StringCatter("--dump-flow-graphs")), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.util.cmdargs.NFlag)new silver.util.cmdargs.Pflag(silver.definition.flow.driver.PdumpFlowGraphFlag.factory)); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } })); } });
		//ASPECT PRODUCTION compilation top ::= g::Grammars _ buildGrammar::String benv::BuildEnv 
		// top.postOps <- if top.config.dumpFlowGraph then [ dumpFlowGraphAction(prodGraph, finalGraphs, unList(rtm:toList(flowTypes))) ] else []
		if(silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation] == null)
			silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation] = new silver.driver.util.CApostOps(silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation);
		((common.CollectionAttribute)silver.driver.util.Pcompilation.synthesizedAttributes[silver.driver.util.Init.silver_driver_util_postOps__ON__silver_driver_util_Compilation]).addPiece(new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return (((Boolean)((common.DecoratedNode)context.inherited(silver.driver.util.Init.silver_definition_env_config__ON__silver_driver_util_Compilation)).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_dumpFlowGraph__ON__silver_util_cmdargs_CmdArgs)) ? ((common.ConsCell)core.Pcons.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.driver.util.NDriverAction)new silver.definition.flow.driver.PdumpFlowGraphAction(context.localAsIsLazy(silver.driver.util.Init.prodGraph__ON__silver_driver_util_compilation), context.localAsIsLazy(silver.driver.util.Init.finalGraphs__ON__silver_driver_util_compilation), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PunList.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.util.raw.treemap.PtoList.invoke(context.localAsIsLazy(silver.driver.util.Init.flowTypes__ON__silver_driver_util_compilation))); } })); } })); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })) : ((common.ConsCell)core.Pnil.invoke())); } });
		//FUNCTION unList [Pair<String [b]>] ::= l::[Pair<String b>] 
		// recurse = unList(tail(l))
		silver.definition.flow.driver.PunList.localAttributes[silver.definition.flow.driver.Init.recurse__ON__silver_definition_flow_driver_unList] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PunList.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Ptail.invoke(context.childAsIsLazy(silver.definition.flow.driver.PunList.i_l))); } })); } };
		silver.definition.flow.driver.PdumpFlowGraphAction.initProductionAttributeDefinitions();
		//FUNCTION generateFlowDotGraph String ::= flowTypes::[Pair<String [FlowType]>] 
		// nt = head(flowTypes).fst
		silver.definition.flow.driver.PgenerateFlowDotGraph.localAttributes[silver.definition.flow.driver.Init.nt__ON__silver_definition_flow_driver_generateFlowDotGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)((core.NPair)core.Phead.invoke(context.childAsIsLazy(silver.definition.flow.driver.PgenerateFlowDotGraph.i_flowTypes))).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_fst__ON__core_Pair)); } };
		// edges = g:toList(head(head(flowTypes).snd))
		silver.definition.flow.driver.PgenerateFlowDotGraph.localAttributes[silver.definition.flow.driver.Init.edges__ON__silver_definition_flow_driver_generateFlowDotGraph] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.util.raw.graph.PtoList.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)core.Phead.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)((core.NPair)core.Phead.invoke(context.childAsIsLazy(silver.definition.flow.driver.PgenerateFlowDotGraph.i_flowTypes))).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_snd__ON__core_Pair)); } })); } })); } };
		//FUNCTION expandLabels [String] ::= l::[Pair<String String>] 
		//FUNCTION makeLabelDcls String ::= nt::String attr::String 
		// a = substring(lastIndexOf(":", attr) + 1, length(attr), attr)
		silver.definition.flow.driver.PmakeLabelDcls.localAttributes[silver.definition.flow.driver.Init.a__ON__silver_definition_flow_driver_makeLabelDcls] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Psubstring.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return Integer.valueOf(((Integer)core.PlastIndexOf.invoke((new common.StringCatter(":")), context.childAsIsLazy(silver.definition.flow.driver.PmakeLabelDcls.i_attr))) + Integer.valueOf((int)1)); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return Integer.valueOf(((common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.driver.PmakeLabelDcls.i_attr))).length()); } }, context.childAsIsLazy(silver.definition.flow.driver.PmakeLabelDcls.i_attr))); } };
		//FUNCTION makeNtFlow String ::= nt::String e::Pair<String String> 
		//FUNCTION generateDotGraph String ::= specs::[ProductionGraph] 
		//FUNCTION makeDotArrow String ::= p::String e::Pair<FlowVertex FlowVertex> style::String 
		//ASPECT PRODUCTION lhsSynVertex top ::= attrName::String 
		// top.dotName = attrName
		silver.definition.flow.ast.PlhsSynVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlhsSynVertex.i_attrName)); } };
		//ASPECT PRODUCTION lhsInhVertex top ::= attrName::String 
		// top.dotName = attrName
		silver.definition.flow.ast.PlhsInhVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlhsInhVertex.i_attrName)); } };
		//ASPECT PRODUCTION rhsVertex top ::= sigName::String attrName::String 
		// top.dotName = sigName ++ "/" ++ attrName
		silver.definition.flow.ast.PrhsVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PrhsVertex.i_sigName)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("/")), (common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PrhsVertex.i_attrName)))); } };
		//ASPECT PRODUCTION localEqVertex top ::= fName::String 
		// top.dotName = fName
		silver.definition.flow.ast.PlocalEqVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlocalEqVertex.i_fName)); } };
		//ASPECT PRODUCTION localVertex top ::= fName::String attrName::String 
		// top.dotName = fName ++ "/" ++ attrName
		silver.definition.flow.ast.PlocalVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlocalVertex.i_fName)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("/")), (common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlocalVertex.i_attrName)))); } };
		//ASPECT PRODUCTION anonEqVertex top ::= fName::String 
		// top.dotName = fName
		silver.definition.flow.ast.PanonEqVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PanonEqVertex.i_fName)); } };
		//ASPECT PRODUCTION anonVertex top ::= fName::String attrName::String 
		// top.dotName = fName ++ "/" ++ attrName
		silver.definition.flow.ast.PanonVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return new common.StringCatter((common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PanonVertex.i_fName)), (common.StringCatter)new common.StringCatter((common.StringCatter)(new common.StringCatter("/")), (common.StringCatter)((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PanonVertex.i_attrName)))); } };
		//FUNCTION computeInitialFlowTypes EnvTree<FlowType> ::= flowEnv::Decorated FlowDefs 
		// specs = ntListCoalesce(groupBy(ntListEq, sortBy(ntListLte, flowEnv.specContribs)))
		silver.definition.flow.driver.PcomputeInitialFlowTypes.localAttributes[silver.definition.flow.driver.Init.specs__ON__silver_definition_flow_driver_computeInitialFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PntListCoalesce.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.PgroupBy.invoke(silver.definition.flow.driver.PntListEq.factory, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.PsortBy.invoke(silver.definition.flow.driver.PntListLte.factory, context.childAsIsSynthesizedLazy(silver.definition.flow.driver.PcomputeInitialFlowTypes.i_flowEnv, silver.definition.flow.ast.Init.silver_definition_flow_ast_specContribs__ON__silver_definition_flow_ast_FlowDefs))); } })); } })); } };
		//FUNCTION initialFlowType Pair<NtName FlowType> ::= x::Pair<NtName [Pair<String [String]>]> 
		//FUNCTION ntListLte Boolean ::= a::Pair<NtName a> b::Pair<NtName b> 
		//FUNCTION ntListEq Boolean ::= a::Pair<NtName a> b::Pair<NtName b> 
		//FUNCTION ntListCoalesce [Pair<NtName [Pair<String [String]>]>] ::= l::[[Pair<NtName Pair<String [String]>>]] 
		//FUNCTION toFlatEdges [Pair<String String>] ::= x::Pair<String [String]> 
		//FUNCTION fullySolveFlowTypes Pair<[ProductionGraph] EnvTree<FlowType>> ::= graphs::[ProductionGraph] ntEnv::EnvTree<FlowType> 
		// prodEnv = directBuildTree(map(prodGraphToEnv, graphs))
		silver.definition.flow.driver.PfullySolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.prodEnv__ON__silver_definition_flow_driver_fullySolveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.definition.env.PdirectBuildTree.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(silver.definition.flow.driver.PprodGraphToEnv.factory, context.childAsIsLazy(silver.definition.flow.driver.PfullySolveFlowTypes.i_graphs))); } })); } };
		// iter = solveFlowTypes(graphs, prodEnv, ntEnv)
		silver.definition.flow.driver.PfullySolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.iter__ON__silver_definition_flow_driver_fullySolveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((core.NPair)silver.definition.flow.driver.PsolveFlowTypes.invoke(context.childAsIsLazy(silver.definition.flow.driver.PfullySolveFlowTypes.i_graphs), context.localAsIsLazy(silver.definition.flow.driver.Init.prodEnv__ON__silver_definition_flow_driver_fullySolveFlowTypes), context.childAsIsLazy(silver.definition.flow.driver.PfullySolveFlowTypes.i_ntEnv))); } };
		//FUNCTION solveFlowTypes Pair<Boolean Pair<[ProductionGraph] EnvTree<FlowType>>> ::= graphs::[ProductionGraph] prodEnv::EnvTree<ProductionGraph> ntEnv::EnvTree<FlowType> 
		// updatedGraph = updateGraph(head(graphs), prodEnv, ntEnv)
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((silver.definition.flow.driver.NProductionGraph)silver.definition.flow.driver.PupdateGraph.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((silver.definition.flow.driver.NProductionGraph)core.Phead.invoke(context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_graphs))); } }, context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_prodEnv), context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_ntEnv))); } };
		// currentFlowType = findFlowType(updatedGraph.lhsNt, ntEnv)
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.currentFlowType__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.definition.flow.driver.PfindFlowType.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.StringCatter)context.localDecorated(silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_lhsNt__ON__silver_definition_flow_driver_ProductionGraph)); } }, context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_ntEnv))); } };
		// synExpansion = map(expandVertexFilterTo(_, updatedGraph), updatedGraph.flowTypeVertexes)
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.synExpansion__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return silver.definition.flow.driver.PexpandVertexFilterTo.factory.invokePartial(new int[]{1}, new Object[]{common.Thunk.transformUndecorate(context.localDecoratedLazy(silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes))}); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)context.localDecorated(silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeVertexes__ON__silver_definition_flow_driver_ProductionGraph)); } })); } };
		// brandNewEdges = findBrandNewEdges(synExpansion, currentFlowType)
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.brandNewEdges__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.definition.flow.driver.PfindBrandNewEdges.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.synExpansion__ON__silver_definition_flow_driver_solveFlowTypes), context.localAsIsLazy(silver.definition.flow.driver.Init.currentFlowType__ON__silver_definition_flow_driver_solveFlowTypes))); } };
		// newFlowType = g:add(brandNewEdges, currentFlowType)
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.newFlowType__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((Object)silver.util.raw.graph.Padd.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.brandNewEdges__ON__silver_definition_flow_driver_solveFlowTypes), context.localAsIsLazy(silver.definition.flow.driver.Init.currentFlowType__ON__silver_definition_flow_driver_solveFlowTypes))); } };
		// recurse = solveFlowTypes(tail(graphs), prodEnv, rtm:update(updatedGraph.lhsNt, [ newFlowType ], ntEnv))
		silver.definition.flow.driver.PsolveFlowTypes.localAttributes[silver.definition.flow.driver.Init.recurse__ON__silver_definition_flow_driver_solveFlowTypes] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((core.NPair)silver.definition.flow.driver.PsolveFlowTypes.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Ptail.invoke(context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_graphs))); } }, context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_prodEnv), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)silver.util.raw.treemap.Pupdate.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.StringCatter)context.localDecorated(silver.definition.flow.driver.Init.updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes).synthesized(silver.definition.flow.driver.Init.silver_definition_flow_driver_lhsNt__ON__silver_definition_flow_driver_ProductionGraph)); } }, new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pcons.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.newFlowType__ON__silver_definition_flow_driver_solveFlowTypes), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pnil.invoke()); } })); } }, context.childAsIsLazy(silver.definition.flow.driver.PsolveFlowTypes.i_ntEnv))); } })); } };
		//FUNCTION findBrandNewEdges [Pair<String String>] ::= candidates::[Pair<String [String]>] currentFlowType::FlowType 
		// syn = head(candidates).fst
		silver.definition.flow.driver.PfindBrandNewEdges.localAttributes[silver.definition.flow.driver.Init.syn__ON__silver_definition_flow_driver_findBrandNewEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)((core.NPair)core.Phead.invoke(context.childAsIsLazy(silver.definition.flow.driver.PfindBrandNewEdges.i_candidates))).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_fst__ON__core_Pair)); } };
		// inhs = head(candidates).snd
		silver.definition.flow.driver.PfindBrandNewEdges.localAttributes[silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_findBrandNewEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)((core.NPair)core.Phead.invoke(context.childAsIsLazy(silver.definition.flow.driver.PfindBrandNewEdges.i_candidates))).decorate(context, (common.Lazy[])null).synthesized(core.Init.core_snd__ON__core_Pair)); } };
		// newinhs = rem(inhs, set:toList(g:edgesFrom(syn, currentFlowType)))
		silver.definition.flow.driver.PfindBrandNewEdges.localAttributes[silver.definition.flow.driver.Init.newinhs__ON__silver_definition_flow_driver_findBrandNewEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)silver.util.Prem.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.inhs__ON__silver_definition_flow_driver_findBrandNewEdges), new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((common.ConsCell)silver.util.raw.treeset.PtoList.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return ((Object)silver.util.raw.graph.PedgesFrom.invoke(context.localAsIsLazy(silver.definition.flow.driver.Init.syn__ON__silver_definition_flow_driver_findBrandNewEdges), context.childAsIsLazy(silver.definition.flow.driver.PfindBrandNewEdges.i_currentFlowType))); } })); } })); } };
		// newEdges = map(pair(syn, _), newinhs)
		silver.definition.flow.driver.PfindBrandNewEdges.localAttributes[silver.definition.flow.driver.Init.newEdges__ON__silver_definition_flow_driver_findBrandNewEdges] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.ConsCell)core.Pmap.invoke(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return core.Ppair.factory.invokePartial(new int[]{0}, new Object[]{context.localAsIsLazy(silver.definition.flow.driver.Init.syn__ON__silver_definition_flow_driver_findBrandNewEdges)}); } }, context.localAsIsLazy(silver.definition.flow.driver.Init.newinhs__ON__silver_definition_flow_driver_findBrandNewEdges))); } };
		//FUNCTION expandVertexFilterTo Pair<String [String]> ::= ver::FlowVertex graph::ProductionGraph 
		//FUNCTION filterLhsInh [String] ::= f::[FlowVertex] 
		//FUNCTION collectInhs [String] ::= f::FlowVertex l::[String] 
		//FUNCTION flowVertexEq Boolean ::= a::FlowVertex b::FlowVertex 
		//ASPECT PRODUCTION lhsSynVertex top ::= attrName::String 
		// top.flowTypeName = attrName
		silver.definition.flow.ast.PlhsSynVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlhsSynVertex.i_attrName)); } };
		//ASPECT PRODUCTION lhsInhVertex top ::= attrName::String 
		// top.flowTypeName = error("Internal compiler error: shouldn't be solving flow types for inherited attributes?")
		silver.definition.flow.ast.PlhsInhVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("Internal compiler error: shouldn't be solving flow types for inherited attributes?")))); } };
		//ASPECT PRODUCTION rhsVertex top ::= sigName::String attrName::String 
		// top.flowTypeName = error("Internal compiler error: shouldn't be solving flow types for child attributes?")
		silver.definition.flow.ast.PrhsVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("Internal compiler error: shouldn't be solving flow types for child attributes?")))); } };
		//ASPECT PRODUCTION localEqVertex top ::= fName::String 
		// top.flowTypeName = fName
		silver.definition.flow.ast.PlocalEqVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)context.childAsIs(silver.definition.flow.ast.PlocalEqVertex.i_fName)); } };
		//ASPECT PRODUCTION localVertex top ::= fName::String attrName::String 
		// top.flowTypeName = error("Internal compiler error: shouldn't be solving flow types for local inherited attributes?")
		silver.definition.flow.ast.PlocalVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("Internal compiler error: shouldn't be solving flow types for local inherited attributes?")))); } };
		//ASPECT PRODUCTION anonEqVertex top ::= fName::String 
		// top.flowTypeName = error("Internal compiler error: shouldn't be solving flow types for anon equations?")
		silver.definition.flow.ast.PanonEqVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("Internal compiler error: shouldn't be solving flow types for anon equations?")))); } };
		//ASPECT PRODUCTION anonVertex top ::= fName::String attrName::String 
		// top.flowTypeName = error("Internal compiler error: shouldn't be solving flow types for anon inherited attributes?")
		silver.definition.flow.ast.PanonVertex.synthesizedAttributes[silver.definition.flow.driver.Init.silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex] = new common.Lazy() { public final Object eval(final common.DecoratedNode context) { return ((common.StringCatter)core.Perror.invoke((new common.StringCatter("Internal compiler error: shouldn't be solving flow types for anon inherited attributes?")))); } };
	}

	public static int count_inh__ON__ProductionGraph = 0;
	public static int count_syn__ON__ProductionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_productionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_updateGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_computeAllProductionGraphs = 0;
	public static int count_local__ON__silver_definition_flow_driver_constructProductionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_constructFunctionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_getPhantomEdge = 0;
	public static int count_local__ON__silver_definition_flow_driver_addFwdSynEqs = 0;
	public static int count_local__ON__silver_definition_flow_driver_addFwdInhEqs = 0;
	public static int count_local__ON__silver_definition_flow_driver_addDefEqs = 0;
	public static int count_local__ON__silver_definition_flow_driver_addAllAutoCopyEqs = 0;
	public static int count_local__ON__silver_definition_flow_driver_addAutocopyEqs = 0;
	public static int count_local__ON__silver_definition_flow_driver_localStitchPoints = 0;
	public static int count_local__ON__silver_definition_flow_driver_rhsStitchPoints = 0;
	public static int count_local__ON__silver_definition_flow_driver_patternStitchPoints = 0;
	public static int count_local__ON__silver_definition_flow_driver_patVarStitchPoints = 0;
	public static int count_local__ON__silver_definition_flow_driver_getInhsForNtForPatternVars = 0;
	public static int count_local__ON__silver_definition_flow_driver_prodGraphToEnv = 0;
	public static int count_local__ON__silver_definition_flow_driver_isOccursInherited = 0;
	public static int count_local__ON__silver_definition_flow_driver_findAdmissibleEdges = 0;
	public static int count_local__ON__silver_definition_flow_driver_findFlowType = 0;
	public static int count_local__ON__silver_definition_flow_driver_findProductionGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_expandGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_onlyLhsInh = 0;
	public static int count_local__ON__silver_definition_flow_driver_inhDepsForSyn = 0;
	public static int count_local__ON__silver_definition_flow_driver_isLhsInhSet = 0;
	public static int count_local__ON__silver_definition_flow_driver_compareFlowVertex = 0;
	public static int count_local__ON__silver_definition_flow_driver_createFlowGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_extendFlowGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_transitiveClose = 0;
	public static int count_local__ON__silver_definition_flow_driver_repairClosure = 0;
	public static int count_inh__ON__StitchPoint = 0;
	public static int count_syn__ON__StitchPoint = 0;
	public static int count_local__ON__silver_definition_flow_driver_nonterminalStitchPoint = 0;
	public static int count_local__ON__silver_definition_flow_driver_projectionStitchPoint = 0;
	public static int count_local__ON__silver_definition_flow_driver_projectAttribute = 0;
	public static int count_local__ON__silver_definition_flow_driver_stitchEdgesFor = 0;
	public static int count_local__ON__silver_definition_flow_driver_edgeIsNew = 0;
	public static int count_local__ON__silver_definition_flow_driver_flowTypeEdge = 0;
	public static int count_local__ON__silver_definition_flow_driver_dumpFlowGraphFlag = 0;
	public static int count_local__ON__silver_definition_flow_driver_unList = 0;
	public static int count_local__ON__silver_definition_flow_driver_dumpFlowGraphAction = 0;
	public static int count_local__ON__silver_definition_flow_driver_generateFlowDotGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_expandLabels = 0;
	public static int count_local__ON__silver_definition_flow_driver_makeLabelDcls = 0;
	public static int count_local__ON__silver_definition_flow_driver_makeNtFlow = 0;
	public static int count_local__ON__silver_definition_flow_driver_generateDotGraph = 0;
	public static int count_local__ON__silver_definition_flow_driver_makeDotArrow = 0;
	public static int count_local__ON__silver_definition_flow_driver_computeInitialFlowTypes = 0;
	public static int count_local__ON__silver_definition_flow_driver_initialFlowType = 0;
	public static int count_local__ON__silver_definition_flow_driver_ntListLte = 0;
	public static int count_local__ON__silver_definition_flow_driver_ntListEq = 0;
	public static int count_local__ON__silver_definition_flow_driver_ntListCoalesce = 0;
	public static int count_local__ON__silver_definition_flow_driver_toFlatEdges = 0;
	public static int count_local__ON__silver_definition_flow_driver_fullySolveFlowTypes = 0;
	public static int count_local__ON__silver_definition_flow_driver_solveFlowTypes = 0;
	public static int count_local__ON__silver_definition_flow_driver_findBrandNewEdges = 0;
	public static int count_local__ON__silver_definition_flow_driver_expandVertexFilterTo = 0;
	public static int count_local__ON__silver_definition_flow_driver_filterLhsInh = 0;
	public static int count_local__ON__silver_definition_flow_driver_collectInhs = 0;
	public static int count_local__ON__silver_definition_flow_driver_flowVertexEq = 0;
public static final int silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_inh__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_stitchedGraph__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_prod__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_lhsNt__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_transitiveClosure__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_edgeMap__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_cullSuspect__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_flowTypeVertexes__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_syn__ON__ProductionGraph++;
public static final int silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_ProductionGraph = silver.definition.flow.driver.Init.count_inh__ON__ProductionGraph++;
public static final int stitchedGraph__ON__silver_definition_flow_driver_updateGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_updateGraph++;
public static final int prod__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int nt__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int attrs__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int syns__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int inhs__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int autos__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int nonForwarding__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int normalEdges__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int fixedEdges__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int synsBySuspicion__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int suspectEdges__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int stitchPoints__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int flowTypeVertexesOverall__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int flowTypeSpecs__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int flowTypeVertexes__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int initialGraph__ON__silver_definition_flow_driver_constructProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructProductionGraph++;
public static final int defs__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int normalEdges__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int suspectEdges__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int initialGraph__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int stitchPoints__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int g__ON__silver_definition_flow_driver_constructFunctionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructFunctionGraph++;
public static final int attrs__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int syns__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int phantomEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int stitchPoints__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int flowTypeVertexes__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int initialGraph__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int suspectEdges__ON__silver_definition_flow_driver_constructPhantomProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_constructPhantomProductionGraph++;
public static final int currentDeps__ON__silver_definition_flow_driver_findAdmissibleEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findAdmissibleEdges++;
public static final int targetNotSource__ON__silver_definition_flow_driver_findAdmissibleEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findAdmissibleEdges++;
public static final int validDeps__ON__silver_definition_flow_driver_findAdmissibleEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findAdmissibleEdges++;
public static final int lookup__ON__silver_definition_flow_driver_findFlowType = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findFlowType++;
public static final int lookup__ON__silver_definition_flow_driver_findProductionGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findProductionGraph++;
public static final int silver_definition_flow_driver_prodGraphs__ON__silver_definition_flow_driver_StitchPoint = silver.definition.flow.driver.Init.count_inh__ON__StitchPoint++;
public static final int silver_definition_flow_driver_flowTypes__ON__silver_definition_flow_driver_StitchPoint = silver.definition.flow.driver.Init.count_inh__ON__StitchPoint++;
public static final int silver_definition_flow_driver_stitchEdges__ON__silver_definition_flow_driver_StitchPoint = silver.definition.flow.driver.Init.count_syn__ON__StitchPoint++;
public static final int silver_definition_flow_driver_dumpFlowGraph__ON__silver_util_cmdargs_CmdArgs = silver.util.cmdargs.Init.count_syn__ON__CmdArgs++;
public static final int recurse__ON__silver_definition_flow_driver_unList = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_unList++;
public static final int nt__ON__silver_definition_flow_driver_generateFlowDotGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_generateFlowDotGraph++;
public static final int edges__ON__silver_definition_flow_driver_generateFlowDotGraph = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_generateFlowDotGraph++;
public static final int a__ON__silver_definition_flow_driver_makeLabelDcls = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_makeLabelDcls++;
public static final int silver_definition_flow_driver_dotName__ON__silver_definition_flow_ast_FlowVertex = silver.definition.flow.ast.Init.count_syn__ON__FlowVertex++;
public static final int specs__ON__silver_definition_flow_driver_computeInitialFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_computeInitialFlowTypes++;
public static final int prodEnv__ON__silver_definition_flow_driver_fullySolveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_fullySolveFlowTypes++;
public static final int iter__ON__silver_definition_flow_driver_fullySolveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_fullySolveFlowTypes++;
public static final int updatedGraph__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int currentFlowType__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int synExpansion__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int brandNewEdges__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int newFlowType__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int recurse__ON__silver_definition_flow_driver_solveFlowTypes = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_solveFlowTypes++;
public static final int syn__ON__silver_definition_flow_driver_findBrandNewEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findBrandNewEdges++;
public static final int inhs__ON__silver_definition_flow_driver_findBrandNewEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findBrandNewEdges++;
public static final int newinhs__ON__silver_definition_flow_driver_findBrandNewEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findBrandNewEdges++;
public static final int newEdges__ON__silver_definition_flow_driver_findBrandNewEdges = silver.definition.flow.driver.Init.count_local__ON__silver_definition_flow_driver_findBrandNewEdges++;
public static final int silver_definition_flow_driver_flowTypeName__ON__silver_definition_flow_ast_FlowVertex = silver.definition.flow.ast.Init.count_syn__ON__FlowVertex++;
}
