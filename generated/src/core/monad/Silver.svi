declaredName 'core:monad'
grammarTime 1508471626
grammarSource "/home/ubuntu/ableC-bundle/silver/grammars/core/monad/"
moduleNames ['core']
allDeps ['core', 'core:monad']
exportedGrammars []
optionalGrammars []
condBuild []
defs [
 fun('List.sv', 3, 9, 3, 17, 30, 38, [a, b], signature('core:monad:bindList', [element('l', [b]), element('fn', fun([b], [a]))], element('__func__lhs', [a]), [])),
 fun('List.sv', 9, 9, 9, 19, 109, 119, [a], signature('core:monad:returnList', [element('x', a)], element('__func__lhs', [a]), [])),
 nt('IO.sv', 3, 12, 3, 19, 33, 40, 'core:monad:IOMonad', [a], nt('core:monad:IOMonad', [a]), f),
 @('IO.sv', 3, 28, 3, 35, 49, 56, 'core:monad:IOMonad', 'core:monad:stateIn', [a], nt('core:monad:IOMonad', [a]), foreigntype('core:IO', [])),
 @('IO.sv', 3, 41, 3, 49, 62, 70, 'core:monad:IOMonad', 'core:monad:stateOut', [a], nt('core:monad:IOMonad', [a]), foreigntype('core:IO', [])),
 @('IO.sv', 3, 55, 3, 63, 76, 84, 'core:monad:IOMonad', 'core:monad:stateVal', [a], nt('core:monad:IOMonad', [a]), a),
 prod('IO.sv', 5, 20, 5, 26, 110, 116, [a, b], signature('core:monad:bindIO', [element('st', nt('core:monad:IOMonad', [b])), element('fn', fun([b], nt('core:monad:IOMonad', [a])))], element('top', nt('core:monad:IOMonad', [a])), [])),
 prod('IO.sv', 19, 20, 19, 28, 577, 585, [a], signature('core:monad:returnIO', [element('x', a)], element('top', nt('core:monad:IOMonad', [a])), [])),
 fun('IO.sv', 26, 9, 26, 14, 675, 680, [a], signature('core:monad:runIO', [element('st', nt('core:monad:IOMonad', [a])), element('ioIn', foreigntype('core:IO', []))], element('__func__lhs', foreigntype('core:IO', [])), [])),
 fun('IO.sv', 32, 9, 32, 15, 756, 762, [a], signature('core:monad:evalIO', [element('st', nt('core:monad:IOMonad', [a])), element('ioIn', foreigntype('core:IO', []))], element('__func__lhs', nt('core:IOVal', [a])), [])),
 fun('IO.sv', 39, 9, 39, 21, 877, 889, [a], signature('core:monad:unsafeEvalIO', [element('st', nt('core:monad:IOMonad', [a]))], element('__func__lhs', a), [])),
 prod('IO.sv', 46, 20, 46, 26, 1000, 1006, [], signature('core:monad:printM', [element('s', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 53, 20, 53, 34, 1130, 1144, [], signature('core:monad:readLineStdinM', [], element('top', nt('core:monad:IOMonad', [string])), [])),
 prod('IO.sv', 61, 20, 61, 25, 1307, 1312, [], signature('core:monad:exitM', [element('val', int)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 68, 20, 68, 26, 1440, 1446, [], signature('core:monad:mkdirM', [element('s', string)], element('top', nt('core:monad:IOMonad', [bool])), [])),
 prod('IO.sv', 76, 20, 76, 27, 1616, 1623, [], signature('core:monad:systemM', [element('s', string)], element('top', nt('core:monad:IOMonad', [int])), [])),
 prod('IO.sv', 84, 20, 84, 30, 1794, 1804, [], signature('core:monad:writeFileM', [element('file', string), element('contents', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 91, 20, 91, 31, 1965, 1976, [], signature('core:monad:appendFileM', [element('file', string), element('contents', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 98, 20, 98, 29, 2138, 2147, [], signature('core:monad:fileTimeM', [element('s', string)], element('top', nt('core:monad:IOMonad', [int])), [])),
 prod('IO.sv', 106, 20, 106, 27, 2320, 2327, [], signature('core:monad:isFileM', [element('s', string)], element('top', nt('core:monad:IOMonad', [bool])), [])),
 prod('IO.sv', 114, 20, 114, 32, 2498, 2510, [], signature('core:monad:isDirectoryM', [element('s', string)], element('top', nt('core:monad:IOMonad', [bool])), [])),
 prod('IO.sv', 122, 20, 122, 29, 2686, 2695, [], signature('core:monad:readFileM', [element('s', string)], element('top', nt('core:monad:IOMonad', [string])), [])),
 prod('IO.sv', 130, 20, 130, 24, 2866, 2870, [], signature('core:monad:cwdM', [], element('top', nt('core:monad:IOMonad', [string])), [])),
 prod('IO.sv', 138, 20, 138, 27, 3024, 3031, [], signature('core:monad:envVarM', [element('s', string)], element('top', nt('core:monad:IOMonad', [string])), [])),
 prod('IO.sv', 146, 20, 146, 33, 3200, 3213, [], signature('core:monad:listContentsM', [element('s', string)], element('top', nt('core:monad:IOMonad', [[string]])), [])),
 prod('IO.sv', 154, 20, 154, 31, 3392, 3403, [], signature('core:monad:deleteFileM', [element('s', string)], element('top', nt('core:monad:IOMonad', [bool])), [])),
 prod('IO.sv', 162, 20, 162, 31, 3578, 3589, [], signature('core:monad:deleteTreeM', [element('s', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 169, 20, 169, 29, 3718, 3727, [], signature('core:monad:copyFileM', [element('src', string), element('dst', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 prod('IO.sv', 176, 20, 176, 30, 3875, 3885, [], signature('core:monad:touchFileM', [element('file', string)], element('top', nt('core:monad:IOMonad', [nt('core:Unit', [])])), [])),
 nt('State.sv', 3, 12, 3, 17, 33, 38, 'core:monad:State', [a, b], nt('core:monad:State', [a, b]), f),
 @('State.sv', 3, 28, 3, 35, 49, 56, 'core:monad:State', 'core:monad:stateIn', [a, b], nt('core:monad:State', [a, b]), a),
 @('State.sv', 3, 40, 3, 48, 61, 69, 'core:monad:State', 'core:monad:stateOut', [a, b], nt('core:monad:State', [a, b]), a),
 @('State.sv', 3, 53, 3, 61, 74, 82, 'core:monad:State', 'core:monad:stateVal', [a, b], nt('core:monad:State', [a, b]), b),
 inh('State.sv', 5, 20, 5, 27, 108, 115, 'core:monad:stateIn', [a], a),
 syn('State.sv', 6, 22, 6, 30, 145, 153, 'core:monad:stateOut', [a], a),
 syn('State.sv', 7, 22, 7, 30, 183, 191, 'core:monad:stateVal', [a], a),
 prod('State.sv', 9, 20, 9, 29, 220, 229, [a, b, c], signature('core:monad:bindState', [element('st', nt('core:monad:State', [a, c])), element('fn', fun([c], nt('core:monad:State', [a, b])))], element('top', nt('core:monad:State', [a, b])), [])),
 prod('State.sv', 20, 20, 20, 31, 498, 509, [a, b], signature('core:monad:returnState', [element('x', b)], element('top', nt('core:monad:State', [a, b])), [])),
 prod('State.sv', 27, 20, 27, 28, 610, 618, [a], signature('core:monad:getState', [], element('top', nt('core:monad:State', [a, a])), [])),
 prod('State.sv', 34, 20, 34, 28, 725, 733, [a], signature('core:monad:setState', [element('newState', a)], element('top', nt('core:monad:State', [a, nt('core:Unit', [])])), [])),
 fun('State.sv', 41, 9, 41, 17, 835, 843, [a, b], signature('core:monad:runState', [element('st', nt('core:monad:State', [a, b])), element('initialState', a)], element('__func__lhs', nt('core:Pair', [a, b])), [])),
 fun('State.sv', 48, 9, 48, 18, 973, 982, [a, b], signature('core:monad:evalState', [element('st', nt('core:monad:State', [b, a])), element('initialState', b)], element('__func__lhs', a), [])),
 fun('Maybe.sv', 3, 9, 3, 18, 30, 39, [a, b], signature('core:monad:bindMaybe', [element('m', nt('core:Maybe', [b])), element('fn', fun([b], nt('core:Maybe', [a])))], element('__func__lhs', nt('core:Maybe', [a])), [])),
 fun('Maybe.sv', 13, 9, 13, 20, 253, 264, [a], signature('core:monad:returnMaybe', [element('x', a)], element('__func__lhs', nt('core:Maybe', [a])), []))]
syntax [nt([a], nt('core:monad:IOMonad', [a])),
 nt([a, b], nt('core:monad:State', [a, b]))]
parsers []
flow [ntRefFlowDef('core:monad:IOMonad', ['core:monad:stateIn']),
 inh('core:monad:bindIO', 'st', 'core:monad:stateIn', [lhsInhV('core:monad:stateIn')]),
 local('core:monad:bindIO', 'core:monad:bindIO:local:newState', 'core:monad:IOMonad', [rhsV('st', 'core:monad:stateVal')]),
 localInh('core:monad:bindIO', 'core:monad:bindIO:local:newState', 'core:monad:stateIn', [rhsV('st', 'core:monad:stateOut')]),
 local('core:monad:bindIO', 'core:monad:bindIO:local:stateOut', '', [localV('core:monad:bindIO:local:newState', 'core:monad:stateOut'), localEqV('core:monad:bindIO:local:newState')]),
 local('core:monad:bindIO', 'core:monad:bindIO:local:stateVal', '', [localV('core:monad:bindIO:local:newState', 'core:monad:stateVal'), localEqV('core:monad:bindIO:local:newState')]),
 syn('core:monad:bindIO', 'core:monad:stateOut', [localEqV('core:monad:bindIO:local:stateOut'), rhsV('st', 'core:monad:stateOut')], t),
 syn('core:monad:bindIO', 'core:monad:stateVal', [localEqV('core:monad:bindIO:local:stateVal'), rhsV('st', 'core:monad:stateOut')], t),
 prod('core:monad:IOMonad', 'core:monad:bindIO'),
 syn('core:monad:returnIO', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:returnIO', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:returnIO'),
 anon('core:monad:runIO', '__decorate22532:line29', 'core:IOVal', 'IO.sv', 29, 9, 29, 28, 723, 742, []),
 inh('core:monad:evalIO', 'st', 'core:monad:stateIn', []),
 anon('core:monad:unsafeEvalIO', '__decorate22533:line42', 'core:IOVal', 'IO.sv', 42, 9, 42, 39, 922, 952, []),
 syn('core:monad:printM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:printM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:printM'),
 local('core:monad:readLineStdinM', 'core:monad:readLineStdinM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:readLineStdinM', 'core:monad:stateOut', [localV('core:monad:readLineStdinM:local:res', 'core:io'), localEqV('core:monad:readLineStdinM:local:res')], t),
 syn('core:monad:readLineStdinM', 'core:monad:stateVal', [localV('core:monad:readLineStdinM:local:res', 'core:iovalue'), localEqV('core:monad:readLineStdinM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:readLineStdinM'),
 syn('core:monad:exitM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:exitM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:exitM'),
 local('core:monad:mkdirM', 'core:monad:mkdirM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:mkdirM', 'core:monad:stateOut', [localV('core:monad:mkdirM:local:res', 'core:io'), localEqV('core:monad:mkdirM:local:res')], t),
 syn('core:monad:mkdirM', 'core:monad:stateVal', [localV('core:monad:mkdirM:local:res', 'core:iovalue'), localEqV('core:monad:mkdirM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:mkdirM'),
 local('core:monad:systemM', 'core:monad:systemM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:systemM', 'core:monad:stateOut', [localV('core:monad:systemM:local:res', 'core:io'), localEqV('core:monad:systemM:local:res')], t),
 syn('core:monad:systemM', 'core:monad:stateVal', [localV('core:monad:systemM:local:res', 'core:iovalue'), localEqV('core:monad:systemM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:systemM'),
 syn('core:monad:writeFileM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:writeFileM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:writeFileM'),
 syn('core:monad:appendFileM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:appendFileM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:appendFileM'),
 local('core:monad:fileTimeM', 'core:monad:fileTimeM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:fileTimeM', 'core:monad:stateOut', [localV('core:monad:fileTimeM:local:res', 'core:io'), localEqV('core:monad:fileTimeM:local:res')], t),
 syn('core:monad:fileTimeM', 'core:monad:stateVal', [localV('core:monad:fileTimeM:local:res', 'core:iovalue'), localEqV('core:monad:fileTimeM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:fileTimeM'),
 local('core:monad:isFileM', 'core:monad:isFileM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:isFileM', 'core:monad:stateOut', [localV('core:monad:isFileM:local:res', 'core:io'), localEqV('core:monad:isFileM:local:res')], t),
 syn('core:monad:isFileM', 'core:monad:stateVal', [localV('core:monad:isFileM:local:res', 'core:iovalue'), localEqV('core:monad:isFileM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:isFileM'),
 local('core:monad:isDirectoryM', 'core:monad:isDirectoryM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:isDirectoryM', 'core:monad:stateOut', [localV('core:monad:isDirectoryM:local:res', 'core:io'), localEqV('core:monad:isDirectoryM:local:res')], t),
 syn('core:monad:isDirectoryM', 'core:monad:stateVal', [localV('core:monad:isDirectoryM:local:res', 'core:iovalue'), localEqV('core:monad:isDirectoryM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:isDirectoryM'),
 local('core:monad:readFileM', 'core:monad:readFileM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:readFileM', 'core:monad:stateOut', [localV('core:monad:readFileM:local:res', 'core:io'), localEqV('core:monad:readFileM:local:res')], t),
 syn('core:monad:readFileM', 'core:monad:stateVal', [localV('core:monad:readFileM:local:res', 'core:iovalue'), localEqV('core:monad:readFileM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:readFileM'),
 local('core:monad:cwdM', 'core:monad:cwdM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:cwdM', 'core:monad:stateOut', [localV('core:monad:cwdM:local:res', 'core:io'), localEqV('core:monad:cwdM:local:res')], t),
 syn('core:monad:cwdM', 'core:monad:stateVal', [localV('core:monad:cwdM:local:res', 'core:iovalue'), localEqV('core:monad:cwdM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:cwdM'),
 local('core:monad:envVarM', 'core:monad:envVarM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:envVarM', 'core:monad:stateOut', [localV('core:monad:envVarM:local:res', 'core:io'), localEqV('core:monad:envVarM:local:res')], t),
 syn('core:monad:envVarM', 'core:monad:stateVal', [localV('core:monad:envVarM:local:res', 'core:iovalue'), localEqV('core:monad:envVarM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:envVarM'),
 local('core:monad:listContentsM', 'core:monad:listContentsM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:listContentsM', 'core:monad:stateOut', [localV('core:monad:listContentsM:local:res', 'core:io'), localEqV('core:monad:listContentsM:local:res')], t),
 syn('core:monad:listContentsM', 'core:monad:stateVal', [localV('core:monad:listContentsM:local:res', 'core:iovalue'), localEqV('core:monad:listContentsM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:listContentsM'),
 local('core:monad:deleteFileM', 'core:monad:deleteFileM:local:res', 'core:IOVal', [lhsInhV('core:monad:stateIn')]),
 syn('core:monad:deleteFileM', 'core:monad:stateOut', [localV('core:monad:deleteFileM:local:res', 'core:io'), localEqV('core:monad:deleteFileM:local:res')], t),
 syn('core:monad:deleteFileM', 'core:monad:stateVal', [localV('core:monad:deleteFileM:local:res', 'core:iovalue'), localEqV('core:monad:deleteFileM:local:res')], t),
 prod('core:monad:IOMonad', 'core:monad:deleteFileM'),
 syn('core:monad:deleteTreeM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:deleteTreeM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:deleteTreeM'),
 syn('core:monad:copyFileM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:copyFileM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:copyFileM'),
 syn('core:monad:touchFileM', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:touchFileM', 'core:monad:stateVal', [], t),
 prod('core:monad:IOMonad', 'core:monad:touchFileM'),
 ntRefFlowDef('core:monad:State', ['core:monad:stateIn']),
 inh('core:monad:bindState', 'st', 'core:monad:stateIn', [lhsInhV('core:monad:stateIn')]),
 local('core:monad:bindState', 'core:monad:bindState:local:newState', 'core:monad:State', [rhsV('st', 'core:monad:stateVal')]),
 localInh('core:monad:bindState', 'core:monad:bindState:local:newState', 'core:monad:stateIn', [rhsV('st', 'core:monad:stateOut')]),
 syn('core:monad:bindState', 'core:monad:stateOut', [localV('core:monad:bindState:local:newState', 'core:monad:stateOut'), localEqV('core:monad:bindState:local:newState')], t),
 syn('core:monad:bindState', 'core:monad:stateVal', [localV('core:monad:bindState:local:newState', 'core:monad:stateVal'), localEqV('core:monad:bindState:local:newState')], t),
 prod('core:monad:State', 'core:monad:bindState'),
 syn('core:monad:returnState', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:returnState', 'core:monad:stateVal', [], t),
 prod('core:monad:State', 'core:monad:returnState'),
 syn('core:monad:getState', 'core:monad:stateOut', [lhsInhV('core:monad:stateIn')], t),
 syn('core:monad:getState', 'core:monad:stateVal', [lhsInhV('core:monad:stateIn')], t),
 prod('core:monad:State', 'core:monad:getState'),
 syn('core:monad:setState', 'core:monad:stateOut', [], t),
 syn('core:monad:setState', 'core:monad:stateVal', [], t),
 prod('core:monad:State', 'core:monad:setState'),
 inh('core:monad:runState', 'st', 'core:monad:stateIn', []),
 anon('core:monad:evalState', '__decorate22534:line51', 'core:Pair', 'State.sv', 51, 9, 51, 39, 1031, 1061, []),
 patternRuleEq('core:monad:bindMaybe', 'core:just', rhs('m'), []),
 patternRuleEq('core:monad:bindMaybe', 'core:nothing', rhs('m'), [])]