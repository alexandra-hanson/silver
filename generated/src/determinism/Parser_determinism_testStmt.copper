<?xml version="1.0" encoding="UTF-8"?>

<CopperSpec xmlns="http://melt.cs.umn.edu/copper/xmlns">
  <ExtendedParser id="determinism_testStmt">
    <PP>determinism:testStmt</PP>
    <HostGrammar>
      <GrammarRef id="host"/>
    </HostGrammar>
    <ExtensionGrammars>
      <GrammarRef id="ext"/>
    </ExtensionGrammars>
    <StartSymbol><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Root" grammar="host" /></StartSymbol>
    <StartLayout><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LineComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Spaces_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_NewLine_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_CPP_Location_Tag_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_PragmaMark" grammar="host" /></StartLayout>
  </ExtendedParser>

  <Grammar id="host">

    <PP>host</PP>

    <Layout><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LineComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Spaces_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_NewLine_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_CPP_Location_Tag_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_PragmaMark" grammar="host" /></Layout>

    <Declarations>
      <ParserAttribute id="context">
        <Type><![CDATA[common.DecoratedNode]]></Type>
        <Code><![CDATA[context = common.TopNode.singleton;]]></Code>
      </ParserAttribute>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DeclarationSpecifiers_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDeclarationSpecifiers_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_58_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_58_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_67_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_67_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_76_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_76_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_85_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_85_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_94_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_94_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_103_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_103_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_112_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_112_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_121_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_121_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:SpecifierQualifierList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NSpecifierQualifierList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_134_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_134_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_141_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_141_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_148_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_148_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_155_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_155_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeQualifierList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTypeQualifierList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_165_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_165_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_169_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_169_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StorageClassSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStorageClassSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_179_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_179_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Typedef_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_182_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_182_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Extern_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_185_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_185_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Static_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_188_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_188_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Auto_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_191_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_191_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Register_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTypeSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_198_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_198_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Void_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_201_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_201_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Char_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_204_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_204_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Short_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_207_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_207_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Int_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_210_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_210_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Long_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_213_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_213_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Float_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_216_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_216_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Double_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_219_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_219_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Signed_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_222_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_222_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Unsigned_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_225_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_225_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Bool_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_228_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_228_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Imagin_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_231_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_231_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Complex_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_234_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_234_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_237_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_237_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_240_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_240_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeQualifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTypeQualifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_247_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_247_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Const_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_250_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_250_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Volatile_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_253_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_253_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Restrict_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FunctionSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NFunctionSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_260_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_260_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Inline_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructOrUnionSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructOrUnionSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_266_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_266_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_272_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_272_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_278_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_278_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructOrUnion_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructOrUnion_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_struct_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pstruct_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_STRUCT" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_union_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Punion_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UNION" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructDeclarationList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructDeclarationList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_294_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_294_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_296_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_296_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructDeclaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_302_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_302_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaratorList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructDeclaratorList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructDeclaratorList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_314_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_314_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_316_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_316_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StructDeclarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStructDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_322_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_322_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_324_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_324_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_326_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_326_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:EnumSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NEnumSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_332_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_332_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ENUM" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_334_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_334_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ENUM" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_336_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_336_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ENUM" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_338_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_338_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ENUM" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_340_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_340_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ENUM" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:EnumeratorList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NEnumeratorList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_346_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_346_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Enumerator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_348_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_348_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EnumeratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Enumerator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Enumerator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Enumerator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NEnumerator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_354_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_354_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Enumerator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_356_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_DeclSpecifiers_sv_356_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Enumerator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /></RHS>
  </Production>
  <ParserAttribute id="edu_umn_cs_melt_ableC_concretesyntax_context">
    <Type><![CDATA[common.ConsCell]]></Type>
    <Code><![CDATA[
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)core.Pcons.invoke(((common.ConsCell)core.Pnil.invoke()), ((common.ConsCell)core.Pnil.invoke())));
]]></Code>
  </ParserAttribute>
  <DisambiguationFunction id="edu_umn_cs_melt_ableC_concretesyntax___disam44">
    <Members><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_t" grammar="host" /></Members>
    <Code><![CDATA[
return (Integer)((Object)(new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { final common.Thunk<Object> __SV_LOCAL_13263___fail_13260 = new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return edu_umn_cs_melt_ableC_concretesyntax_Identifier_t; } };
return new common.PatternLazy<common.DecoratedNode, Object>() { public final Object eval(final common.DecoratedNode context, common.DecoratedNode scrutineeIter) {while(true) {final common.DecoratedNode scrutinee = scrutineeIter; final common.Node scrutineeNode = scrutinee.undecorate(); if(scrutineeNode instanceof core.Pjust) { final common.Thunk<Object> __SV_LOCAL___pv13268___sv_tmp_pv_13267 = new common.Thunk<Object>(context) { public final Object doEval(final common.DecoratedNode context) { return (edu.umn.cs.melt.ableC.concretesyntax.lexerHack.NIdentType)scrutinee.childAsIs(0); } };
 return (Object)new common.PatternLazy<common.DecoratedNode, Object>() { public final Object eval(final common.DecoratedNode context, common.DecoratedNode scrutineeIter) {while(true) {final common.DecoratedNode scrutinee = scrutineeIter; final common.Node scrutineeNode = scrutinee.undecorate(); if(scrutineeNode instanceof edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PtypenameType_c) {  return (Object)edu_umn_cs_melt_ableC_concretesyntax_TypeName_t; }if(!scrutineeIter.undecorate().hasForward()) break;scrutineeIter = scrutineeIter.forward();}return ((Object)(__SV_LOCAL_13263___fail_13260.eval()));}}.eval(context, (common.DecoratedNode)((edu.umn.cs.melt.ableC.concretesyntax.lexerHack.NIdentType)(__SV_LOCAL___pv13268___sv_tmp_pv_13267.eval())).decorate(context, (common.Lazy[])null)); }if(!scrutineeIter.undecorate().hasForward()) break;scrutineeIter = scrutineeIter.forward();}return ((Object)(__SV_LOCAL_13263___fail_13260.eval()));}}.eval(context, (common.DecoratedNode)((core.NMaybe)core.PlookupBy.invoke(core.PstringEq.factory, new common.StringCatter(lexeme), ((common.ConsCell)core.Phead.invoke(edu_umn_cs_melt_ableC_concretesyntax_context)))).decorate(context, (common.Lazy[])null)); } }).eval());
]]></Code>
  </DisambiguationFunction>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_FunctionDefinition_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FunctionDefinition_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NFunctionDefinition_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_31_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_31_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PcloseScope.invoke(edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionDefinition_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitialFunctionDefinition_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Declaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_41_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_41_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = (((Boolean)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarationSpecifiers_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_41_0.i_ds)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_isTypedef__ON__edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c)) ? ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PaddTypenamesToScope.invoke(((common.ConsCell)((edu.umn.cs.melt.ableC.concretesyntax.NInitDeclaratorList_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_41_0.i_idcl)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredIdents__ON__edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c)), edu_umn_cs_melt_ableC_concretesyntax_context)) : ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PaddIdentsToScope.invoke(((common.ConsCell)((edu.umn.cs.melt.ableC.concretesyntax.NInitDeclaratorList_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_41_0.i_idcl)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredIdents__ON__edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c)), edu_umn_cs_melt_ableC_concretesyntax_context)));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_69_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_69_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Declarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_80_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_80_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_86_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_86_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeName_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTypeName_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_95_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_95_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_108_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_108_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeNames_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTypeNames_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_127_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_127_0(_children[0], _children[1], _children[2]);
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_129_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_129_0(_children[0]);
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_131_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_131_0();
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_NEVER_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeNames_NEVER_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="T"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="E"/></CharacterSet><CharacterSet><SingleCharacter char="V"/></CharacterSet><CharacterSet><SingleCharacter char="E"/></CharacterSet><CharacterSet><SingleCharacter char="R"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="1"/></CharacterSet><CharacterSet><SingleCharacter char="2"/></CharacterSet><CharacterSet><SingleCharacter char="3"/></CharacterSet><CharacterSet><SingleCharacter char="4"/></CharacterSet><CharacterSet><SingleCharacter char="5"/></CharacterSet><CharacterSet><SingleCharacter char="6"/></CharacterSet><CharacterSet><SingleCharacter char="7"/></CharacterSet><CharacterSet><SingleCharacter char="8"/></CharacterSet><CharacterSet><SingleCharacter char="9"/></CharacterSet><CharacterSet><SingleCharacter char="0"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TTypeNames_NEVER_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TTypeNames_NEVER_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_138_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_138_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_NEVER_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_142_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_142_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_NEVER_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GreaterThan_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_146_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_146_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_NEVER_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeNames_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_InitialFunctionDefinition_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:InitialFunctionDefinition_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInitialFunctionDefinition_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_164_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_164_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PbeginFunctionScope.invoke(((edu.umn.cs.melt.ableC.abstractsyntax.host.NName)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_164_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredIdent__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), ((core.NMaybe)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_164_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredParamIdents__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitialFunctionDefinition_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_183_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_183_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PbeginFunctionScope.invoke(((edu.umn.cs.melt.ableC.abstractsyntax.host.NName)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_183_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredIdent__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), ((core.NMaybe)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_183_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredParamIdents__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitialFunctionDefinition_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DeclarationList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDeclarationList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_209_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_209_0(common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_212_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_212_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationList_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Pointer_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NPointer_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_219_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_219_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_221_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_221_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_223_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_223_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_226_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_226_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DirectDeclarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDirectDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_233_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_233_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_238_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_238_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_244_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_244_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_250_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_250_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_256_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_256_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_262_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_262_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_268_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_268_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Static_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_274_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_274_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Static_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_280_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_280_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Static_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_286_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_286_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_292_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_292_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_298_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_298_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_305_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_305_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_312_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_312_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_FunctionQualifiers_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FunctionQualifiers_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="q"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFunctionQualifiers_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFunctionQualifiers_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OptTypeQualifierList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NOptTypeQualifierList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_325_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_325_0(common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_327_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_327_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionQualifiers_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AbstractDeclarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAbstractDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_333_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_333_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_338_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_338_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_342_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_342_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Pointer_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DirectAbstractDeclarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDirectAbstractDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_350_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_350_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_355_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_355_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_360_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_360_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_364_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_364_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_369_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_369_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_373_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_373_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_378_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_378_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_382_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_382_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_387_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_387_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_391_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_391_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_396_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_396_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DirectAbstractDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OptTypeQualifierList_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ParameterTypeList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NParameterTypeList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_406_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_406_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_410_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_410_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterTypeList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ELLIPSES" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ParameterList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NParameterList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_418_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_418_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_422_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_422_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ParameterDeclaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NParameterDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_430_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_430_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_438_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_438_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_446_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_446_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:IdentifierList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NIdentifierList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_457_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_457_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_459_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_459_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:InitDeclaratorList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInitDeclaratorList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_465_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_465_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_468_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_468_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclaratorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:InitDeclarator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInitDeclarator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_475_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_475_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></RHS>
    <Operator><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Cpp_Attribute_high_prec" grammar="host" /></Operator>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_481_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Declarations_sv_481_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CompoundStatement_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NCompoundStatement_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_7_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_7_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_9_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_9_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:BlockItemList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NBlockItemList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_oneBlockItem_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.PoneBlockItem_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_27_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_27_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:BlockItem_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NBlockItem_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_36_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_36_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_blockStmt_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.PblockStmt_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Stmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_44_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_44_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_46_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_46_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_exprStmt_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.PexprStmt_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_50_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_50_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_52_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_52_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_54_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_54_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LabeledStmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NLabeledStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_60_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_60_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_62_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_62_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CASE" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_64_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_64_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DEFAULT" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ExprStmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NExprStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_emptyExprStmt_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.PemptyExprStmt_c(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_nonEmptyExprStmt_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.PnonEmptyExprStmt_c(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:SelectionStmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NSelectionStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_84_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_84_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IF" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_86_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_86_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IF" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ELSE" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_88_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_88_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SWITCH" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:IterationStmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NIterationStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_94_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_94_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_WHILE" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_96_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_96_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DO" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_WHILE" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_99_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_99_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FOR" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_101_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_101_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FOR" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_104_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_104_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FOR" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_106_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_106_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IterationStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FOR" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExprStmt_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:JumpStmt_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NJumpStmt_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_115_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_115_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GOTO" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_117_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_117_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CONTINUE" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_119_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_119_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BREAK" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_121_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_121_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Return_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_123_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Stmt_sv_123_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Return_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Root">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Root</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NRoot]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_6_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_6_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Root" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_8_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_8_0(common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Root" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TranslationUnit_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NTranslationUnit_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_15_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_15_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_17_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_17_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ExternalDeclaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NExternalDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_24_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_24_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_26_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Root_sv_26_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionDefinition_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Expr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_9_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_9_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_11_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_11_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AssignExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAssignExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_22_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_22_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_25_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_25_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ConstantExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NConstantExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_32_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_32_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Initializer_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInitializer_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_38_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_38_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_40_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_40_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_42_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_42_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AssignOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAssignOp_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_51_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_51_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_52_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_52_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MUL_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_53_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_53_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DIV_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_54_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_54_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MOD_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_55_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_55_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ADD_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_56_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_56_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SUB_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_57_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_57_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LEFT_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_58_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_58_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RIGHT_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_59_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_59_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AND_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_60_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_60_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_XOR_ASSIGN" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_61_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_61_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OR_ASSIGN" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ConditionalExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NConditionalExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_71_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_71_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Question_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_73_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_73_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LogicalOrExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NLogicalOrExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_85_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_85_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_88_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_88_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OrOp_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LogicalAndExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NLogicalAndExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_99_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_99_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_102_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_102_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalAndExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndOp_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:InclusiveOrExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInclusiveOrExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_113_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_113_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_116_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_116_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InclusiveOrExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Or_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ExclusiveOrExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NExclusiveOrExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_127_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_127_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_130_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_130_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExclusiveOrExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Xor_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AndExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAndExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_141_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_141_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_144_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_144_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_And_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:EqualityExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NEqualityExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_155_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_155_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_158_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_158_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Equality_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_160_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_160_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_EqualityExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_NonEquality_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RelationalExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NRelationalExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_171_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_171_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_174_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_174_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LessThan_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_176_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_176_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GreaterThan_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_178_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_178_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LessThanEqual_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_180_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_180_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RelationalExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GreaterThanEqual_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ShiftExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NShiftExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_191_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_191_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_194_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_194_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LEFT_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_196_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_196_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ShiftExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RIGHT_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AdditiveExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAdditiveExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_217_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_217_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_220_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_220_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveExpr_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AdditiveOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAdditiveOp_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_233_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_233_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Plus_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_235_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_235_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AdditiveOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Minus_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulLeft_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulLeft_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_248_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_248_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_251_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_251_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeftOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeftOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulLeftOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulLeftOp_c]]></Type>
  </Nonterminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_NEVER_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulLeft_NEVER_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="M"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="1"/></CharacterSet><CharacterSet><SingleCharacter char="2"/></CharacterSet><CharacterSet><SingleCharacter char="3"/></CharacterSet><CharacterSet><SingleCharacter char="4"/></CharacterSet><CharacterSet><SingleCharacter char="5"/></CharacterSet><CharacterSet><SingleCharacter char="6"/></CharacterSet><CharacterSet><SingleCharacter char="7"/></CharacterSet><CharacterSet><SingleCharacter char="8"/></CharacterSet><CharacterSet><SingleCharacter char="9"/></CharacterSet><CharacterSet><SingleCharacter char="0"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAddMulLeft_NEVER_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAddMulLeft_NEVER_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_260_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_260_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeftOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulLeft_NEVER_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulRight_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulRight_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_273_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_273_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_276_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_276_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRightOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRightOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulRightOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulRightOp_c]]></Type>
  </Nonterminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_NEVER_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulRight_NEVER_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="M"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="R"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="1"/></CharacterSet><CharacterSet><SingleCharacter char="2"/></CharacterSet><CharacterSet><SingleCharacter char="3"/></CharacterSet><CharacterSet><SingleCharacter char="4"/></CharacterSet><CharacterSet><SingleCharacter char="5"/></CharacterSet><CharacterSet><SingleCharacter char="6"/></CharacterSet><CharacterSet><SingleCharacter char="7"/></CharacterSet><CharacterSet><SingleCharacter char="8"/></CharacterSet><CharacterSet><SingleCharacter char="9"/></CharacterSet><CharacterSet><SingleCharacter char="0"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAddMulRight_NEVER_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAddMulRight_NEVER_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_285_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_285_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRightOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulRight_NEVER_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulNone_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulNone_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_298_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_298_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_301_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_301_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNoneOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNoneOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulNoneOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NAddMulNoneOp_c]]></Type>
  </Nonterminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_NEVER_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AddMulNone_NEVER_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="M"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="1"/></CharacterSet><CharacterSet><SingleCharacter char="2"/></CharacterSet><CharacterSet><SingleCharacter char="3"/></CharacterSet><CharacterSet><SingleCharacter char="4"/></CharacterSet><CharacterSet><SingleCharacter char="5"/></CharacterSet><CharacterSet><SingleCharacter char="6"/></CharacterSet><CharacterSet><SingleCharacter char="7"/></CharacterSet><CharacterSet><SingleCharacter char="8"/></CharacterSet><CharacterSet><SingleCharacter char="9"/></CharacterSet><CharacterSet><SingleCharacter char="0"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAddMulNone_NEVER_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAddMulNone_NEVER_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_310_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_310_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNoneOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AddMulNone_NEVER_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:MultiplicativeExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NMultiplicativeExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_326_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_326_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_329_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_329_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_331_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_331_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Divide_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_333_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_333_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_MultiplicativeExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Mod_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CastExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NCastExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_344_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_344_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_347_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_347_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:UnaryExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NUnaryExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_358_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_358_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_361_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_361_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_INC_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_363_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_363_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DEC_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_365_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_365_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CastExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_368_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_368_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SIZEOF" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_370_1">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_370_1(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SIZEOF" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:UnaryOp_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NUnaryOp_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_378_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_378_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_And_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_379_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_379_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_380_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_380_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Plus_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_381_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_381_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Minus_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_382_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_382_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Tilde_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_383_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_383_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Not_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:PostfixExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NPostfixExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_396_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_396_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_399_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_399_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_401_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_401_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_407_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_407_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_413_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_413_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_419_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_419_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Dot_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_421_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_421_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_423_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_423_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_INC_OP" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_425_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_425_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DEC_OP" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_427_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_427_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_429_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_429_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PostfixExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ArgumentExprList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NArgumentExprList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_441_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_441_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_444_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_444_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:PrimaryExpr_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NPrimaryExpr_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_456_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_456_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_459_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_459_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_461_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_461_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_463_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_463_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:InitializerList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NInitializerList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_469_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_469_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_471_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_471_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_473_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_473_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_475_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_475_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitializerList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Designation_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDesignation_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_481_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_481_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DesignatorList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_DesignatorList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DesignatorList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDesignatorList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_488_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_488_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DesignatorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DesignatorList_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_491_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_491_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DesignatorList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designator_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Designator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Designator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NDesignator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_499_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_499_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArrayDesignator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_501_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_501_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Dot_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_ArrayDesignator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ArrayDesignator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NArrayDesignator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_508_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_508_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArrayDesignator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstant_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStringConstant_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_514_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_514_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_516_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_516_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringLiteral_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NStringLiteral_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_522_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_522_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_524_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_524_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantU8_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_526_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_526_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_528_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_528_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_530_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_530_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringLiteral_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantUBig_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Constant_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.NConstant_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_537_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_537_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_539_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_539_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_541_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_541_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_543_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_543_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantUL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_545_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_545_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantLL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_547_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_547_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantULL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_550_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_550_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_552_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_552_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_554_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_554_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_556_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_556_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantUL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_558_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_558_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantLL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_560_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_560_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantULL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_562_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_562_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantError_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_565_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_565_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_567_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_567_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_569_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_569_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_571_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_571_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantUL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_573_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_573_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantLL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_575_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_575_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantULL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_578_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_578_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_580_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_580_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstantFloat_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_582_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_582_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstantLongDouble_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_585_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_585_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_587_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_587_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstantFloat_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_589_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_589_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstantLongDouble_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_592_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_592_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CharConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_594_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_594_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_596_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_596_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_p_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_598_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.Pp_edu_umn_cs_melt_ableC_concretesyntax_Expr_sv_598_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantUBig_t" grammar="host" /></RHS>
  </Production>
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" />
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" />
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" />
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" />
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LineComment">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LineComment</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="/"/></CharacterSet><CharacterSet><SingleCharacter char="/"/></CharacterSet><KleeneStar><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLineComment</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLineComment(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_BlockComment">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:BlockComment</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="/"/></CharacterSet><CharacterSet><SingleCharacter char="*"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="*"/></CharacterSet><CharacterSet><SingleCharacter char="&#13;"/><SingleCharacter char="&#10;"/></CharacterSet><Concatenation><Concatenation><CharacterSet><SingleCharacter char="*"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="*"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet invert="true"><SingleCharacter char="*"/><SingleCharacter char="/"/></CharacterSet><CharacterSet><SingleCharacter char="&#13;"/><SingleCharacter char="&#10;"/></CharacterSet></Choice></Concatenation></Choice></KleeneStar><Concatenation><CharacterSet><SingleCharacter char="*"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="*"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="/"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TBlockComment</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TBlockComment(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Spaces_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Spaces_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&#9;"/><SingleCharacter char=" "/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#9;"/><SingleCharacter char=" "/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSpaces_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSpaces_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_NewLine_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:NewLine_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TNewLine_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TNewLine_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Cidentifier" />
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Identifier_t</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><SingleCharacter char="$"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><CharacterRange lower="0" upper="9"/><SingleCharacter char="$"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TIdentifier_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TIdentifier_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cidentifier" grammar="host" /></InClasses>
    <Submits><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:TypeName_t</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><SingleCharacter char="$"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><CharacterRange lower="0" upper="9"/><SingleCharacter char="$"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TTypeName_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TTypeName_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cidentifier" grammar="host" /></InClasses>
    <Submits><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></Submits>
    <Dominates></Dominates>
  </Terminal>
  <TerminalClass id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" />
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstant_t</PP>
    <Regex><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstantU_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstantL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantUL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstantUL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstantUL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstantUL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantLL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstantLL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstantLL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstantLL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DecConstantULL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DecConstantULL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDecConstantULL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDecConstantULL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantU_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantUL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantUL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantUL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantUL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantLL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantLL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantLL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantLL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantULL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantULL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="7"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantULL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantULL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OctConstantError_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OctConstantError_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><KleeneStar><CharacterSet><SingleCharacter char="u"/><SingleCharacter char="U"/><SingleCharacter char="l"/><SingleCharacter char="L"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOctConstantError_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOctConstantError_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstantU_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstantL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantUL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstantUL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstantUL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstantUL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantLL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstantLL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstantLL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstantLL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexConstantULL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexConstantULL_t</PP>
    <Regex><Concatenation><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="a" upper="f"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexConstantULL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexConstantULL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FloatConstant_t</PP>
    <Regex><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFloatConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFloatConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstantFloat_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FloatConstantFloat_t</PP>
    <Regex><Concatenation><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFloatConstantFloat_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFloatConstantFloat_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_FloatConstantLongDouble_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FloatConstantLongDouble_t</PP>
    <Regex><Concatenation><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFloatConstantLongDouble_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFloatConstantLongDouble_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexFloatConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstantFloat_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexFloatConstantFloat_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstantFloat_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstantFloat_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_HexFloatConstantLongDouble_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:HexFloatConstantLongDouble_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstantLongDouble_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.THexFloatConstantLongDouble_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStringConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStringConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantU8_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstantU8_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="8"/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStringConstantU8_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStringConstantU8_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstantL_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="L"/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStringConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStringConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstantU_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStringConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStringConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_StringConstantUBig_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:StringConstantUBig_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="U"/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><Choice><CharacterSet invert="true"><SingleCharacter char="&quot;"/><SingleCharacter char="\"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice></KleeneStar><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStringConstantUBig_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStringConstantUBig_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CharConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CharConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="'"/></CharacterSet><Choice><CharacterSet invert="true"><SingleCharacter char="'"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice><CharacterSet><SingleCharacter char="'"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCharConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCharConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CharConstantL_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="L"/></CharacterSet><CharacterSet><SingleCharacter char="'"/></CharacterSet><Choice><CharacterSet invert="true"><SingleCharacter char="'"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice><CharacterSet><SingleCharacter char="'"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCharConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCharConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CharConstantU_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="'"/></CharacterSet><Choice><CharacterSet invert="true"><SingleCharacter char="'"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice><CharacterSet><SingleCharacter char="'"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCharConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCharConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CharConstantUBig_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CharConstantUBig_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="U"/></CharacterSet><CharacterSet><SingleCharacter char="'"/></CharacterSet><Choice><CharacterSet invert="true"><SingleCharacter char="'"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="\"/></CharacterSet><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></Concatenation></Choice><CharacterSet><SingleCharacter char="'"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCharConstantUBig_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCharConstantUBig_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Char_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Char_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TChar_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TChar_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Double_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Double_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDouble_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDouble_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Float_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Float_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFloat_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFloat_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Int_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Int_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TInt_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TInt_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Long_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Long_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLong_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLong_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Short_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Short_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TShort_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TShort_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Signed_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Signed_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSigned_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSigned_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Unsigned_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Unsigned_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TUnsigned_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TUnsigned_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Void_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Void_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TVoid_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TVoid_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Bool_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Bool_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="B"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TBool_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TBool_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Complex_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Complex_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="C"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="x"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TComplex_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TComplex_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Imagin_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Imagin_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="I"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TImagin_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TImagin_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_ENUM">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ENUM</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TENUM</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TENUM(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_STRUCT">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:STRUCT</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSTRUCT</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSTRUCT(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_UNION">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:UNION</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TUNION</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TUNION(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Const_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Const_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TConst_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TConst_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Volatile_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Volatile_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TVolatile_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TVolatile_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Restrict_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Restrict_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRestrict_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRestrict_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Inline_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Inline_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TInline_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TInline_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Auto_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Auto_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAuto_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAuto_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Extern_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Extern_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="x"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TExtern_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TExtern_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Register_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Register_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRegister_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRegister_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Static_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Static_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStatic_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStatic_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Typedef_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Typedef_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TTypedef_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TTypedef_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_BREAK">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:BREAK</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="k"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TBREAK</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TBREAK(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CASE">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CASE</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCASE</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCASE(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_CONTINUE">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:CONTINUE</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCONTINUE</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCONTINUE(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DEFAULT">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DEFAULT</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDEFAULT</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDEFAULT(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DO">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DO</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDO</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDO(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_ELSE">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ELSE</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>2</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TELSE</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TELSE(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_FOR">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:FOR</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TFOR</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TFOR(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_GOTO">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:GOTO</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TGOTO</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TGOTO(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_IF">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:IF</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TIF</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TIF(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Return_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Return_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TReturn_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TReturn_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_SWITCH">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:SWITCH</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="w"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSWITCH</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSWITCH(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_WHILE">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:WHILE</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="w"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TWHILE</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TWHILE(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_SIZEOF">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:SIZEOF</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="z"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSIZEOF</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSIZEOF(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Comma_t</PP>
    <Regex><CharacterSet><SingleCharacter char=","/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TComma_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TComma_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Semi_t</PP>
    <Regex><CharacterSet><SingleCharacter char=";"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSemi_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSemi_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LParen_t</PP>
    <Regex><CharacterSet><SingleCharacter char="("/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLParen_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLParen_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RParen_t</PP>
    <Regex><CharacterSet><SingleCharacter char=")"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>1</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRParen_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRParen_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LBracket_t</PP>
    <Regex><CharacterSet><SingleCharacter char="["/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLBracket_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLBracket_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RBracket_t</PP>
    <Regex><CharacterSet><SingleCharacter char="]"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRBracket_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRBracket_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LCurly_t</PP>
    <Regex><CharacterSet><SingleCharacter char="{"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLCurly_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLCurly_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)core.Pcons.invoke(((common.ConsCell)core.Phead.invoke(edu_umn_cs_melt_ableC_concretesyntax_context)), edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RCurly_t</PP>
    <Regex><CharacterSet><SingleCharacter char="}"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRCurly_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRCurly_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)core.Ptail.invoke(edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Question_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Question_t</PP>
    <Regex><CharacterSet><SingleCharacter char="?"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TQuestion_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TQuestion_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Colon_t</PP>
    <Regex><CharacterSet><SingleCharacter char=":"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TColon_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TColon_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Dot_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Dot_t</PP>
    <Regex><CharacterSet><SingleCharacter char="."/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDot_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDot_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:PTR_OP</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="-"/></CharacterSet><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TPTR_OP</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TPTR_OP(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Assign_t</PP>
    <Regex><CharacterSet><SingleCharacter char="="/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAssign_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAssign_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_RIGHT_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RIGHT_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRIGHT_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRIGHT_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LEFT_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LEFT_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLEFT_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLEFT_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_ADD_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ADD_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="+"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TADD_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TADD_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_SUB_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:SUB_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="-"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TSUB_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TSUB_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_MUL_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:MUL_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="*"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TMUL_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TMUL_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DIV_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DIV_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="/"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDIV_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDIV_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_MOD_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:MOD_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="%"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TMOD_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TMOD_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_AND_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AND_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAND_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAND_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_XOR_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:XOR_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="^"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TXOR_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TXOR_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OR_ASSIGN">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OR_ASSIGN</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="|"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOR_ASSIGN</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOR_ASSIGN(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cassignment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_And_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:And_t</PP>
    <Regex><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAnd_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAnd_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Or_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Or_t</PP>
    <Regex><CharacterSet><SingleCharacter char="|"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOr_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOr_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Tilde_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Tilde_t</PP>
    <Regex><CharacterSet><SingleCharacter char="~"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TTilde_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TTilde_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Xor_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Xor_t</PP>
    <Regex><CharacterSet><SingleCharacter char="^"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TXor_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TXor_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_RIGHT_OP">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:RIGHT_OP</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TRIGHT_OP</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TRIGHT_OP(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LEFT_OP">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LEFT_OP</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLEFT_OP</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLEFT_OP(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Minus_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Minus_t</PP>
    <Regex><CharacterSet><SingleCharacter char="-"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>5</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TMinus_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TMinus_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Plus_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Plus_t</PP>
    <Regex><CharacterSet><SingleCharacter char="+"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>5</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TPlus_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TPlus_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Star_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Star_t</PP>
    <Regex><CharacterSet><SingleCharacter char="*"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>6</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TStar_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TStar_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Divide_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Divide_t</PP>
    <Regex><CharacterSet><SingleCharacter char="/"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>6</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDivide_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDivide_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Mod_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Mod_t</PP>
    <Regex><CharacterSet><SingleCharacter char="%"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TMod_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TMod_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Not_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Not_t</PP>
    <Regex><CharacterSet><SingleCharacter char="!"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TNot_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TNot_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_AndOp_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:AndOp_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet><CharacterSet><SingleCharacter char="&amp;"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>4</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TAndOp_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TAndOp_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_OrOp_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:OrOp_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="|"/></CharacterSet><CharacterSet><SingleCharacter char="|"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>4</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TOrOp_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TOrOp_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LessThan_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LessThan_t</PP>
    <Regex><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLessThan_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLessThan_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_GreaterThan_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:GreaterThan_t</PP>
    <Regex><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TGreaterThan_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TGreaterThan_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_LessThanEqual_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:LessThanEqual_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&lt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TLessThanEqual_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TLessThanEqual_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_GreaterThanEqual_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:GreaterThanEqual_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="&gt;"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TGreaterThanEqual_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TGreaterThanEqual_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Equality_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Equality_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="="/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TEquality_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TEquality_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_NonEquality_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:NonEquality_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="!"/></CharacterSet><CharacterSet><SingleCharacter char="="/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>3</Precedence>
      <LeftAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TNonEquality_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TNonEquality_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_INC_OP">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:INC_OP</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="+"/></CharacterSet><CharacterSet><SingleCharacter char="+"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TINC_OP</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TINC_OP(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_DEC_OP">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:DEC_OP</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="-"/></CharacterSet><CharacterSet><SingleCharacter char="-"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TDEC_OP</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TDEC_OP(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_ELLIPSES">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:ELLIPSES</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet><CharacterSet><SingleCharacter char="."/></CharacterSet><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TELLIPSES</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TELLIPSES(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_Cpp_Attribute_high_prec">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:Cpp_Attribute_high_prec</PP>
    <Regex><EmptyString/></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>20</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.TCpp_Attribute_high_prec</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.TCpp_Attribute_high_prec(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Space_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:cppTags:Space_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char=" "/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char=" "/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.cppTags.TSpace_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.cppTags.TSpace_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Hash_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:cppTags:Hash_t</PP>
    <Regex><CharacterSet><SingleCharacter char="#"/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.cppTags.THash_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.cppTags.THash_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_CPP_Location_Tag_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:cppTags:CPP_Location_Tag_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="#"/></CharacterSet><CharacterSet><SingleCharacter char=" "/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char=" "/></CharacterSet><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><Concatenation><CharacterSet invert="true"><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><CharacterSet invert="true"><SingleCharacter char="&quot;"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="&quot;"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char=" "/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><Concatenation><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.cppTags.TCPP_Location_Tag_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.cppTags.TCPP_Location_Tag_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
virtualLocation.setFileName(((common.StringCatter)core.Psubstring.invoke(Integer.valueOf(((Integer)core.PindexOf.invoke((new common.StringCatter("\"")), new common.StringCatter(lexeme))) + Integer.valueOf((int)1)), ((Integer)core.PlastIndexOf.invoke((new common.StringCatter("\"")), new common.StringCatter(lexeme))), new common.StringCatter(lexeme))).toString());
virtualLocation.setLine(Integer.valueOf(((common.StringCatter)core.Psubstring.invoke(Integer.valueOf((int)2), Integer.valueOf(((Integer)core.PindexOf.invoke((new common.StringCatter("\"")), new common.StringCatter(lexeme))) - Integer.valueOf((int)1)), new common.StringCatter(lexeme))).toString()));
virtualLocation.setColumn(Integer.valueOf((int)0));
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_AlignAs_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_AlignAs_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_AlignAs_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_AlignAs_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_12_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_12_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_AlignmentSpecifier_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_21_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_21_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_AlignmentSpecifier_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_AlignmentSpecifier_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:AlignmentSpecifier_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.c11.NAlignmentSpecifier_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_37_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_37_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_AlignmentSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_AlignAs_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_44_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_44_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_AlignmentSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_AlignAs_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Noreturn_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Noreturn_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="N"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Noreturn_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Noreturn_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_51_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_51_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Noreturn_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Generic_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Generic_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="G"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Generic_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Generic_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_58_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_58_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericSelection_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericSelection_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:GenericSelection_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.c11.NGenericSelection_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_63_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_63_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericSelection_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Generic_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssocList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssocList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:GenericAssocList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.c11.NGenericAssocList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_77_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_77_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssocList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssoc_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_80_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_80_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssocList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssocList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssoc_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssoc_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:GenericAssoc_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.c11.NGenericAssoc_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_86_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_86_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssoc_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_89_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_89_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_GenericAssoc_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DEFAULT" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Atomic_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Atomic_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Atomic_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_LParen_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Atomic_LParen_t</PP>
    <Regex><CharacterSet><SingleCharacter char="("/></CharacterSet></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Atomic_LParen_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Atomic_LParen_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <DisambiguationFunction id="edu_umn_cs_melt_ableC_concretesyntax_c11___disam106">
    <Members><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /></Members>
    <Code><![CDATA[
return (Integer)edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_LParen_t;
]]></Code>
  </DisambiguationFunction>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_113_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_113_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_118_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_118_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Atomic_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Thread_local_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Thread_local_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="T"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Thread_local_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Thread_local_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_133_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_133_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StorageClassSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Thread_local_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Static_assert_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Static_assert_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="S"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Static_assert_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Static_assert_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_StaticAssertDeclaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:StaticAssertDeclaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.c11.NStaticAssertDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_143_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_143_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_StaticAssertDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Static_assert_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_147_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_147_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_StaticAssertDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Alignof_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:c11:C11_Alignof_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="A"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Alignof_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.TC11_Alignof_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_c11_p_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_155_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.c11.Pp_edu_umn_cs_melt_ableC_concretesyntax_c11_C11_sv_155_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_c11_C11_Alignof_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Attribute_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Attribute_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>10</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Attribute_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Attribute_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUAttribute_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_UUAttribute_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>10</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUAttribute_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUAttribute_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Attr_LowerPrec_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Attr_LowerPrec_t</PP>
    <Regex><EmptyString/></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>5</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Attr_LowerPrec_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Attr_LowerPrec_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Attributes_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAttributes_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_12_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_12_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attribute_c" grammar="host" /></RHS>
    <Operator><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Attr_LowerPrec_t" grammar="host" /></Operator>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_15_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_15_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attribute_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attribute_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Attribute_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAttribute_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_20_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_20_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attribute_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Attribute_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_22_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_22_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attribute_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUAttribute_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AttributeList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAttributeList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_27_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_27_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_29_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_29_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Attrib_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAttrib_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_34_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_34_0(common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c" grammar="host" /></LHS>
    <RHS></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_36_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_36_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttribName_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_46_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_46_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attrib_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttribName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArgumentExprList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeNameUnfetterdByKeywords_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AttributeNameUnfetterdByKeywords_t</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><SingleCharacter char="$"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><CharacterRange lower="0" upper="9"/><SingleCharacter char="$"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TAttributeNameUnfetterdByKeywords_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TAttributeNameUnfetterdByKeywords_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttribName_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AttribName_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAttribName_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_70_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_VariableAttributes_sv_70_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttribName_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AttributeNameUnfetterdByKeywords_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UULabel_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_UULabel_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UULabel_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UULabel_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_localLabelsCompoundBlock_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.PlocalLabelsCompoundBlock_c(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclarations_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclarations_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:LabelDeclarations_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NLabelDeclarations_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_15_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_15_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclarations_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_16_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_16_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclarations_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclarations_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclaration_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclaration_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:LabelDeclaration_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NLabelDeclaration_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_20_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_20_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_LabelDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UULabel_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_24_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_24_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Extension_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_26_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_26_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItem_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_NestedFunctionDefinition_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_30_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_30_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GOTO" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Star_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_33_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_33_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], _children[7], _children[8], _children[9], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_JumpStmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_GOTO" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_IdentifierList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_37_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_37_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_41_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_41_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LabeledStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CASE" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ELLIPSES" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_45_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Stmts_sv_45_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Stmt_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Statement_c" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Extension_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Extension_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="x"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Extension_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Extension_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Inline_OneSided_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Inline_OneSided_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Inline_OneSided_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Inline_OneSided_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Inline_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Inline_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Inline_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Inline_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Signed_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Signed_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Signed_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Signed_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Volatile_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Volatile_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Volatile_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Volatile_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUVolatile_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_UUVolatile_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUVolatile_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUVolatile_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UUConst_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:UUConst_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUUConst_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUUConst_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UUBuiltinVAList_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:UUBuiltinVAList_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUUBuiltinVAList_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUUBuiltinVAList_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UURestrict_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:UURestrict_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUURestrict_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUURestrict_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UURestrictUU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:UURestrictUU_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUURestrictUU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TUURestrictUU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Typeof_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Typeof_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TTypeof_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TTypeof_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Typeof_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Typeof_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Typeof_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Typeof_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUTypeof_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_UUTypeof_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUTypeof_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUTypeof_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_25_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_25_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TranslationUnit_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_29_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_29_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Extension_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_31_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_31_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_SimpleAsmStatement_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_35_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_35_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Inline_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_37_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_37_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_FunctionSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Inline_OneSided_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_41_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_41_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UUConst_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_44_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_44_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UURestrict_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_47_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_47_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UURestrictUU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_50_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_50_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Volatile_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_53_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_53_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUVolatile_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_58_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_58_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_UUBuiltinVAList_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_61_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_61_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Signed_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_64_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_64_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_67_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_67_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:TypeofStarter_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NTypeofStarter_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_73_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_73_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Typeof_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_74_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_74_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Typeof_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_75_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_75_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_TypeofStarter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUTypeof_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_78_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_78_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Extension_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclaration_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_NestedFunctionDefinition_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:NestedFunctionDefinition_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NNestedFunctionDefinition_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_85_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_85_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PcloseScope.invoke(edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_NestedFunctionDefinition_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_InitialNestedFunctionDefinition_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_CompoundStatement_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_InitialNestedFunctionDefinition_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:InitialNestedFunctionDefinition_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NInitialNestedFunctionDefinition_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_94_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_94_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
edu_umn_cs_melt_ableC_concretesyntax_context = ((common.ConsCell)edu.umn.cs.melt.ableC.concretesyntax.lexerHack.PbeginFunctionScope.invoke(((edu.umn.cs.melt.ableC.abstractsyntax.host.NName)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_94_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredIdent__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), ((core.NMaybe)((edu.umn.cs.melt.ableC.concretesyntax.NDeclarator_c)((common.Node)RESULT).getChild(edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_94_0.i_d)).decorate(context, (common.Lazy[])null).synthesized(edu.umn.cs.melt.ableC.concretesyntax.Init.edu_umn_cs_melt_ableC_concretesyntax_declaredParamIdents__ON__edu_umn_cs_melt_ableC_concretesyntax_Declarator_c)), edu_umn_cs_melt_ableC_concretesyntax_context));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_InitialNestedFunctionDefinition_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_114_0">
    <Class>main</Class>
    <Precedence>20</Precedence>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_114_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_121_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_121_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Assign_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_127_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_127_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_SimpleAsmStatement_c" grammar="host" /></RHS>
    <Operator><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Cpp_Attribute_high_prec" grammar="host" /></Operator>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_134_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_134_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_InitDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_SimpleAsmStatement_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
    <Operator><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Cpp_Attribute_high_prec" grammar="host" /></Operator>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_144_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_144_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_153_0">
    <Class>main</Class>
    <Precedence>10</Precedence>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_153_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_167_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_167_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_174_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_174_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SpecifierQualifierList_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_215_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_215_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_218_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_218_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_221_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_221_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_227_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_227_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructDeclarationList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_234_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_234_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_240_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_240_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnion_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_285_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_285_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_293_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Declarations_sv_293_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ParameterDeclaration_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_DeclarationSpecifiers_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AbstractDeclarator_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Attributes_c" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstant_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstantU_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstantL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantUL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstantUL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantUL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantUL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantLL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstantLL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantLL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantLL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantULL_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IDecConstantULL_t</PP>
    <Regex><Concatenation><Choice><CharacterSet><SingleCharacter char="0"/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="1" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="U"/><SingleCharacter char="u"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantULL_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIDecConstantULL_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IFloatConstant_t</PP>
    <Regex><Concatenation><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstantFloat_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IFloatConstantFloat_t</PP>
    <Regex><Concatenation><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstantFloat_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstantFloat_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstantLongDouble_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IFloatConstantLongDouble_t</PP>
    <Regex><Concatenation><Choice><Concatenation><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="."/></CharacterSet></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><EmptyString/></Choice></Concatenation><Concatenation><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><CharacterSet><SingleCharacter char="E"/><SingleCharacter char="e"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Choice><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstantLongDouble_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIFloatConstantLongDouble_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstant_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IHexFloatConstant_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstant_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstant_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstantFloat_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IHexFloatConstantFloat_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="F"/><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstantFloat_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstantFloat_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstantLongDouble_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:IHexFloatConstantLongDouble_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="0"/></CharacterSet><CharacterSet><SingleCharacter char="x"/><SingleCharacter char="X"/></CharacterSet><Choice><Concatenation><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation><Choice><CharacterSet><SingleCharacter char="."/></CharacterSet><EmptyString/></Choice></Concatenation><Concatenation><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char="."/></CharacterSet><Concatenation><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="a" upper="f"/><CharacterRange lower="A" upper="F"/><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Choice><Concatenation><CharacterSet><SingleCharacter char="P"/><SingleCharacter char="p"/></CharacterSet><Choice><CharacterSet><SingleCharacter char="+"/><SingleCharacter char="-"/></CharacterSet><EmptyString/></Choice><Concatenation><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="0" upper="9"/></CharacterSet></KleeneStar></Concatenation></Concatenation><Choice><Concatenation><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet></Concatenation><Concatenation><CharacterSet><SingleCharacter char="L"/><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="I"/><SingleCharacter char="i"/><SingleCharacter char="J"/><SingleCharacter char="j"/></CharacterSet></Concatenation></Choice></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstantLongDouble_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TIHexFloatConstantLongDouble_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cliteral" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_66_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_66_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_68_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_68_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_70_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_70_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_72_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_72_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantUL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_74_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_74_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantLL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_76_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_76_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IDecConstantULL_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_79_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_79_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_81_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_81_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstantFloat_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_83_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_83_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IFloatConstantLongDouble_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_86_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_86_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_88_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_88_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstantFloat_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_90_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_90_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_IHexFloatConstantLongDouble_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUReal_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_UUReal_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUReal_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUReal_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UURealUU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_UURealUU_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UURealUU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UURealUU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUImag_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_UUImag_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUImag_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUImag_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUImagUU_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_UUImagUU_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUImagUU_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_UUImagUU_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_100_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_100_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUReal_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_101_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_101_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UURealUU_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_102_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_102_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUImag_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_103_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_ImaginaryLiterals_sv_103_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_UUImagUU_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_PragmaMark">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:PragmaMark</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="#"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char=" "/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="k"/></CharacterSet><KleeneStar><CharacterSet invert="true"><SingleCharacter char="&#10;"/></CharacterSet></KleeneStar><Concatenation><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPragmaMark</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPragmaMark(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ccomment" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Pragma_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPragma_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPragma_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_RedefExtname_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:RedefExtname_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="x"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TRedefExtname_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TRedefExtname_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pack_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Pack_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="k"/></CharacterSet><CharacterSet><SingleCharacter char="("/></CharacterSet><KleeneStar><CharacterSet invert="true"><SingleCharacter char=")"/></CharacterSet></KleeneStar><CharacterSet><SingleCharacter char=")"/></CharacterSet><Concatenation><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet><KleeneStar><CharacterSet><SingleCharacter char="&#10;"/><SingleCharacter char="&#13;"/></CharacterSet></KleeneStar></Concatenation></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPack_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TPack_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_sv_12_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_sv_12_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Hash_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pack_t" grammar="host" /></RHS>
    <Layout><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Space_t" grammar="host" /></Layout>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_sv_15_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_sv_15_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ExternalDeclaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Hash_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Pragma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_RedefExtname_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
    <Layout><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_Space_t" grammar="host" /></Layout>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOf_T">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_AlignOf_T</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_AlignOf_T</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_AlignOf_T(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOfUU_T">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_AlignOfUU_T</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_AlignOfUU_T</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_AlignOfUU_T(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaArg_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_VaArg_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaArg_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaArg_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_Offsetof_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_Offsetof_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="f"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_Offsetof_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_Offsetof_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_TypesCompatible_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_TypesCompatible_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_TypesCompatible_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_TypesCompatible_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_ConstantP_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_ConstantP_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="o"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_ConstantP_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_ConstantP_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaArgPack_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_VaArgPack_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="g"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="k"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaArgPack_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaArgPack_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_Expect_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_Expect_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="x"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_Expect_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_Expect_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaStart_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_VaStart_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaStart_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaStart_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaEnd_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:GNU_Builtin_VaEnd_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="b"/></CharacterSet><CharacterSet><SingleCharacter char="u"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="l"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="i"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="v"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet><CharacterSet><SingleCharacter char="d"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaEnd_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TGNU_Builtin_VaEnd_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_20_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_20_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LogicalOrExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Question_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConditionalExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_24_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_24_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOf_T" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_26_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_26_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOf_T" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_28_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_28_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOfUU_T" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_30_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_30_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_AlignOfUU_T" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_32_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_32_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AndOp_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_36_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_36_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_UnaryOp_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Extension_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_40_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_40_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_52_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_52_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaArg_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_54_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_54_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_Offsetof_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_56_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_56_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_TypesCompatible_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_58_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_58_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_ConstantP_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_60_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_60_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaArgPack_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_62_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_62_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_Expect_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_AssignExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_64_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_64_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaStart_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_66_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_66_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_GNU_Builtin_VaEnd_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:MemberDesignator_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NMemberDesignator_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_72_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_72_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_74_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_74_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Dot_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_76_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_76_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_78_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_78_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_MemberDesignator_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_82_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_82_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Initializer_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_86_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_86_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArrayDesignator_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_89_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_89_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Designation_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_93_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Expr_sv_93_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ArrayDesignator_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ELLIPSES" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_ConstantExpr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Asm_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TAsm_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TAsm_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Asm_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_Asm_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Asm_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_Asm_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUAsm_t">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:CPP_UUAsm_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="_"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="s"/></CharacterSet><CharacterSet><SingleCharacter char="m"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUAsm_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.TCPP_UUAsm_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_SimpleAsmStatement_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:SimpleAsmStatement_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NSimpleAsmStatement_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_11_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_11_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_SimpleAsmStatement_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Statement_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Asm_Statement_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsm_Statement_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_16_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_16_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Statement_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeQualifier_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_25_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_25_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Statement_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:Asm_Starter_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsm_Starter_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_32_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_32_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_34_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_34_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_Asm_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_36_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_36_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_Asm_Starter_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_CPP_UUAsm_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AsmArgument_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsmArgument_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_41_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_41_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_47_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_47_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_53_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_53_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_59_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_59_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_65_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_65_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_71_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_71_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_77_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_77_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_83_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_83_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_89_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_89_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_95_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_95_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_101_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_101_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmArgument_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Colon_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AsmClobbers_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsmClobbers_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_110_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_110_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_112_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_112_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmClobbers_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AsmOperands_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsmOperands_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_117_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_117_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperand_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_119_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_119_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperands_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperand_c" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperand_c">
    <PP>edu:umn:cs:melt:ableC:concretesyntax:gcc_exts:AsmOperand_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.NAsmOperand_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_124_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_124_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperand_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_p_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_126_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.ableC.concretesyntax.gcc_exts.Pp_edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmConstruct_sv_126_0(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], _children[6], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_AsmOperand_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RBracket_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
    </Declarations>
  </Grammar>

  <ExtensionGrammar id="ext">
    <PP>host</PP>

    <Layout><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LineComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockComment" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Spaces_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_NewLine_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_cppTags_CPP_Location_Tag_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_gcc_exts_PragmaMark" grammar="host" /></Layout>

    <MarkingTerminals>
<TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Datatype_t" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match_t" grammar="ext" />    </MarkingTerminals>
    <BridgeProductions>
<ProductionRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DatatypeFwd_sv_9_0" grammar="ext" /><ProductionRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_34_0" grammar="ext" /><ProductionRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_matchMatch_c" grammar="ext" /><ProductionRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_match_c" grammar="ext" />    </BridgeProductions>
    <Declarations>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_abstractsyntax_ADTInfo">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:abstractsyntax:ADTInfo</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.abstractsyntax.NADTInfo]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_abstractsyntax_ADTDecl">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:abstractsyntax:ADTDecl</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.abstractsyntax.NADTDecl]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_abstractsyntax_ConstructorList">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:abstractsyntax:ConstructorList</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.abstractsyntax.NConstructorList]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_abstractsyntax_Constructor">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:abstractsyntax:Constructor</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.abstractsyntax.NConstructor]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DatatypeFwd_sv_9_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DatatypeFwd_sv_9_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StructOrUnionSpecifier_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Datatype_t" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Datatype_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:Datatype_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="d"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="y"/></CharacterSet><CharacterSet><SingleCharacter char="p"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.TDatatype_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.TDatatype_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_34_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_34_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Declaration_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Datatype_t" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ADTDecl_c" grammar="ext" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ADTDecl_c">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:ADTDecl_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.NADTDecl_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_40_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_40_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ADTDecl_c" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ConstructorList_c" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ConstructorList_c">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:ConstructorList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.NConstructorList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_46_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_46_0(_children[0], _children[1]);
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ConstructorList_c" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Constructor_c" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ConstructorList_c" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_48_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_48_0();
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_ConstructorList_c" grammar="ext" /></LHS>
    <RHS></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Constructor_c">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:Constructor_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.NConstructor_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_54_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_54_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_Constructor_c" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Identifier_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TypeNameList_c" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TypeNameList_c">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:TypeNameList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.NTypeNameList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_60_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_60_0(_children[0], _children[1]);
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TypeNameList_c" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TailTypeNameList_c" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_62_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_62_0();
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TypeNameList_c" grammar="ext" /></LHS>
    <RHS></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TailTypeNameList_c">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:datatype:concretesyntax:TailTypeNameList_c</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.NTailTypeNameList_c]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_67_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_67_0(_children[0], _children[1], _children[2]);
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TailTypeNameList_c" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_TypeName_c" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TailTypeNameList_c" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_69_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.datatype.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_DataType_sv_69_0();
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_datatype_concretesyntax_TailTypeNameList_c" grammar="ext" /></LHS>
    <RHS></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_ExprClauses">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:ExprClauses</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NExprClauses]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_ExprClause">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:ExprClause</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NExprClause]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_Pattern">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:Pattern</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NPattern]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_StmtClauses">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:StmtClauses</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NStmtClauses]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_StmtClause">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:StmtClause</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NStmtClause]]></Type>
  </Nonterminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_abstractsyntax_PatternList">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:abstractsyntax:PatternList</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.abstractsyntax.NPatternList]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_matchMatch_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.PmatchMatch_c(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PrimaryExpr_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match_t" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match" grammar="ext" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:Match</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NMatch]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_matchExpr_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.PmatchExpr_c(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClauses" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClauses">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:ExprClauses</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NExprClauses]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_32_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_32_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClauses" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClause" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClauses" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_37_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_37_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClauses" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClause" grammar="ext" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClause">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:ExprClause</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NExprClause]]></Type>
  </Nonterminal>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Where_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:Where_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="w"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="r"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TWhere_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TWhere_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_53_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_53_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_57_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchExpr_sv_57_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ExprClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Semi_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:Match_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="m"/></CharacterSet><CharacterSet><SingleCharacter char="a"/></CharacterSet><CharacterSet><SingleCharacter char="t"/></CharacterSet><CharacterSet><SingleCharacter char="c"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TMatch_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TMatch_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_match_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pmatch_c(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_SelectionStmt_c" grammar="host" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Match_t" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt" grammar="ext" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:MatchStmt</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NMatchStmt]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_matchStmt_c">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.PmatchStmt_c(_children[0], _children[1], _children[2], _children[3], _children[4], _children[5], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClauses" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClauses">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:StmtClauses</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NStmtClauses]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_48_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_48_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClauses" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClauses" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_53_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_53_0(common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClauses" grammar="ext" /></LHS>
    <RHS></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:StmtClause</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NStmtClause]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_63_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_63_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_68_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_68_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_73_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_73_0(_children[0], _children[1], _children[2], _children[3], _children[4], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_BlockItemList_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_78_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_MatchStmt_sv_78_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_StmtClause" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_PTR_OP" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LCurly_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RCurly_t" grammar="host" /></RHS>
  </Production>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternName_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:PatternName_t</PP>
    <Regex><Concatenation><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><SingleCharacter char="$"/></CharacterSet><KleeneStar><CharacterSet><CharacterRange lower="A" upper="Z"/><CharacterRange lower="a" upper="z"/><SingleCharacter char="_"/><CharacterRange lower="0" upper="9"/><SingleCharacter char="$"/></CharacterSet></KleeneStar></Concatenation></Regex>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TPatternName_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TPatternName_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Cidentifier" grammar="host" /></InClasses>
    <Submits><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_NamedPatternOp_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:NamedPatternOp_t</PP>
    <Regex><CharacterSet><SingleCharacter char="@"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>0</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TNamedPatternOp_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TNamedPatternOp_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_AntipatternOp_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:AntipatternOp_t</PP>
    <Regex><CharacterSet><SingleCharacter char="!"/></CharacterSet></Regex>
    <Operator>
      <Class>main</Class>
      <Precedence>1</Precedence>
      <NonAssociative/>
    </Operator>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TAntipatternOp_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TAntipatternOp_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Csymbol" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>
  <Terminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_When_t">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:When_t</PP>
    <Regex><Concatenation><CharacterSet><SingleCharacter char="w"/></CharacterSet><CharacterSet><SingleCharacter char="h"/></CharacterSet><CharacterSet><SingleCharacter char="e"/></CharacterSet><CharacterSet><SingleCharacter char="n"/></CharacterSet></Concatenation></Regex>
    <Type>edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TWhen_t</Type>
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.TWhen_t(lexeme,virtualLocation,(int)getStartRealLocation().getPos(),(int)getEndRealLocation().getPos());
  tokenList.add(RESULT);
]]></Code>
    <InClasses><TerminalClassRef id="edu_umn_cs_melt_ableC_concretesyntax_Ckeyword" grammar="host" /></InClasses>
    <Submits></Submits>
    <Dominates></Dominates>
  </Terminal>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:Pattern</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NPattern]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_18_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_18_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternName_t" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_22_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_22_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternName_t" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_29_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_29_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternName_t" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_35_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_35_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_NamedPatternOp_t" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_41_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_41_0(_children[0], _children[1], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_AntipatternOp_t" grammar="ext" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_47_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_47_0(_children[0], _children[1], _children[2], _children[3], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></LHS>
    <RHS><TerminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_When_t" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_LParen_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Expr_c" grammar="host" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_RParen_t" grammar="host" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:PatternList</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NPatternList]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_57_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_57_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_60_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_60_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Pattern" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_68_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_68_0(_children[0], _children[1], _children[2], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /><TerminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Comma_t" grammar="host" /><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_71_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_71_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_PatternList" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /></RHS>
  </Production>

  <Nonterminal id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern">
    <PP>edu:umn:cs:melt:exts:ableC:algebraicDataTypes:patternmatching:concretesyntax:ConstPattern</PP>
    <Type><![CDATA[edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.NConstPattern]]></Type>
  </Nonterminal>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_96_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_96_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_Constant_c" grammar="host" /></RHS>
  </Production>
  <Production id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_p_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_99_0">
    <Code><![CDATA[
RESULT = new edu.umn.cs.melt.exts.ableC.algebraicDataTypes.patternmatching.concretesyntax.Pp_edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_Patterns_sv_99_0(_children[0], common.Terminal.createSpan(_children, virtualLocation, (int)_pos.getPos()));
]]></Code>
    <LHS><NonterminalRef id="edu_umn_cs_melt_exts_ableC_algebraicDataTypes_patternmatching_concretesyntax_ConstPattern" grammar="ext" /></LHS>
    <RHS><NonterminalRef id="edu_umn_cs_melt_ableC_concretesyntax_StringConstant_c" grammar="host" /></RHS>
  </Production>
    </Declarations>
  </ExtensionGrammar>

</CopperSpec>
